{
  "start_time": "2025-05-26T11:06:16.495489",
  "end_time": "2025-05-26T11:06:45.464610",
  "total_duration": 28.969121,
  "test_results": {
    "test_a2a_task_handler.py": {
      "success": false,
      "output": "2025-05-26 11:06:22,548 - A2ATaskHandler - INFO - A2ATaskHandler initialized for agent test-agent-001\nE2025-05-26 11:06:22,551 - A2ATaskHandler - INFO - A2ATaskHandler initialized for agent test-agent-001\nE2025-05-26 11:06:22,552 - A2ATaskHandler - INFO - A2ATaskHandler initialized for agent test-agent-001\nF2025-05-26 11:06:22,553 - A2ATaskHandler - INFO - A2ATaskHandler initialized for agent test-agent-001\nE2025-05-26 11:06:22,554 - A2ATaskHandler - INFO - A2ATaskHandler initialized for agent test-agent-001\n.2025-05-26 11:06:22,556 - A2ATaskHandler - INFO - A2ATaskHandler initialized for agent test-agent-001\nE2025-05-26 11:06:22,556 - A2ATaskHandler - INFO - A2ATaskHandler initialized for agent test-agent-001\n.2025-05-26 11:06:22,557 - A2ATaskHandler - INFO - A2ATaskHandler initialized for agent test-agent-001\nE\n======================================================================\nERROR: test_conflict_detection (__main__.TestA2ATaskHandler.test_conflict_detection)\nTest that conflicts are detected and recorded.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_a2a_task_handler.py\", line 253, in test_conflict_detection\n    response = self.task_handler.handle_task(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\a2a_task_handler.py\", line 341, in handle_task\n    \"received_at\": datetime.now(datetime.UTC).isoformat(),\n                                ^^^^^^^^^^^^\nAttributeError: type object 'datetime.datetime' has no attribute 'UTC'\n\n======================================================================\nERROR: test_conversation_context (__main__.TestA2ATaskHandler.test_conversation_context)\nTest that conversation context is maintained across multiple tasks.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_a2a_task_handler.py\", line 174, in test_conversation_context\n    self.task_handler.handle_task(\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\a2a_task_handler.py\", line 341, in handle_task\n    \"received_at\": datetime.now(datetime.UTC).isoformat(),\n                                ^^^^^^^^^^^^\nAttributeError: type object 'datetime.datetime' has no attribute 'UTC'\n\n======================================================================\nERROR: test_error_handling (__main__.TestA2ATaskHandler.test_error_handling)\nTest error handling in task processing.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_a2a_task_handler.py\", line 209, in test_error_handling\n    response = self.task_handler.handle_task(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\a2a_task_handler.py\", line 341, in handle_task\n    \"received_at\": datetime.now(datetime.UTC).isoformat(),\n                                ^^^^^^^^^^^^\nAttributeError: type object 'datetime.datetime' has no attribute 'UTC'\n\n======================================================================\nERROR: test_handle_task (__main__.TestA2ATaskHandler.test_handle_task)\nTest the main handle_task method.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_a2a_task_handler.py\", line 146, in test_handle_task\n    query_response = self.task_handler.handle_task(\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\a2a_task_handler.py\", line 341, in handle_task\n    \"received_at\": datetime.now(datetime.UTC).isoformat(),\n                                ^^^^^^^^^^^^\nAttributeError: type object 'datetime.datetime' has no attribute 'UTC'\n\n======================================================================\nERROR: test_principle_evaluation (__main__.TestA2ATaskHandler.test_principle_evaluation)\nTest that principle evaluation is applied.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_a2a_task_handler.py\", line 231, in test_principle_evaluation\n    response = self.task_handler.handle_task(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\a2a_task_handler.py\", line 341, in handle_task\n    \"received_at\": datetime.now(datetime.UTC).isoformat(),\n                                ^^^^^^^^^^^^\nAttributeError: type object 'datetime.datetime' has no attribute 'UTC'\n\n======================================================================\nFAIL: test_determine_intent (__main__.TestA2ATaskHandler.test_determine_intent)\nTest intent determination from content.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_a2a_task_handler.py\", line 132, in test_determine_intent\n    self.assertEqual(\nAssertionError: 'request' != 'instruct'\n- request\n+ instruct\n\n\n----------------------------------------------------------------------\nRan 8 tests in 0.012s\n\nFAILED (failures=1, errors=5)\n",
      "duration": 0.14398694038391113
    },
    "test_ai_framework_detector.py": {
      "success": false,
      "output": "Traceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_ai_framework_detector.py\", line 355, in <module>\n    passed, failed = test_framework_detection()\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_ai_framework_detector.py\", line 247, in test_framework_detection\n    print(\"\\u2713 PASS\")\n  File \"C:\\Users\\every\\miniconda3\\Lib\\encodings\\cp1252.py\", line 19, in encode\n    return codecs.charmap_encode(input,self.errors,encoding_table)[0]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nUnicodeEncodeError: 'charmap' codec can't encode character '\\u2713' in position 0: character maps to <undefined>\n",
      "duration": 0.06426286697387695
    },
    "test_anthropic_mistral.py": {
      "success": true,
      "output": "",
      "duration": 0.2540931701660156
    },
    "test_api_gateway_system.py": {
      "success": true,
      "output": "",
      "duration": 0.13327741622924805
    },
    "test_api_gateway_system_calendar.py": {
      "success": false,
      "output": "Traceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_api_gateway_system_calendar.py\", line 16, in <module>\n    from api_gateway_system_calendar import (\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\api_gateway_system_calendar.py\", line 31, in <module>\n    from principle_engine_example import PrincipleEvaluationRequest\nImportError: cannot import name 'PrincipleEvaluationRequest' from 'principle_engine_example' (C:\\Users\\every\\Desktop\\Alex Familiar\\src\\principle_engine_example.py)\n",
      "duration": 0.14385294914245605
    },
    "test_emoji_emotional_analyzer.py": {
      "success": true,
      "output": "",
      "duration": 0.07887458801269531
    },
    "test_emoji_emotional_analyzer_enhanced.py": {
      "success": false,
      "output": "F.......F........FF.F.F..FF.......\n======================================================================\nFAIL: test_conflicting_emotions (__main__.TestEdgeCases.test_conflicting_emotions)\nTest handling input with strongly conflicting emotions.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emoji_emotional_analyzer_enhanced.py\", line 619, in test_conflicting_emotions\n    self.assertIsNotNone(emotion.secondary_emotion)\nAssertionError: unexpectedly None\n\n======================================================================\nFAIL: test_map_to_emotional_states (__main__.TestEmojiEmotionalAnalyzer.test_map_to_emotional_states)\nTest the map_to_emotional_states method.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emoji_emotional_analyzer_enhanced.py\", line 531, in test_map_to_emotional_states\n    self.assertIn(EmotionCategory.JOY, emotion_map)\nAssertionError: <EmotionCategory.JOY: 1> not found in {<EmotionCategory.NEUTRAL: 9>: 1.0}\n\n======================================================================\nFAIL: test_calculate_intensity (__main__.TestEmotionDetectionEngine.test_calculate_intensity)\nTest calculation of emotional intensity from emojis.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emoji_emotional_analyzer_enhanced.py\", line 117, in test_calculate_intensity\n    self.assertIn(intensity, [EmotionIntensity.HIGH, EmotionIntensity.VERY_HIGH])\nAssertionError: <EmotionIntensity.MEDIUM: 3> not found in [<EmotionIntensity.HIGH: 4>, <EmotionIntensity.VERY_HIGH: 5>]\n\n======================================================================\nFAIL: test_detect_complex_emotion_patterns (__main__.TestEmotionDetectionEngine.test_detect_complex_emotion_patterns)\nTest detection of complex emotion patterns.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emoji_emotional_analyzer_enhanced.py\", line 105, in test_detect_complex_emotion_patterns\n    self.assertEqual(state.primary_emotion, emotion)\nAssertionError: <EmotionCategory.NEUTRAL: 9> != <EmotionCategory.SADNESS: 2>\n\n======================================================================\nFAIL: test_detect_emotion_with_modifiers (__main__.TestEmotionDetectionEngine.test_detect_emotion_with_modifiers)\nTest emotion detection with intensity modifiers.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emoji_emotional_analyzer_enhanced.py\", line 91, in test_detect_emotion_with_modifiers\n    self.assertEqual(base_state.primary_emotion, intensified_state.primary_emotion)\nAssertionError: <EmotionCategory.JOY: 1> != <EmotionCategory.NEUTRAL: 9>\n\n======================================================================\nFAIL: test_extract_emojis (__main__.TestEmotionDetectionEngine.test_extract_emojis)\nTest extracting emojis from mixed text.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emoji_emotional_analyzer_enhanced.py\", line 44, in test_extract_emojis\n    self.assertEqual(len(emojis), 3)\nAssertionError: 1 != 3\n\n======================================================================\nFAIL: test_map_to_emotional_states_complex (__main__.TestEmotionMappingSystem.test_map_to_emotional_states_complex)\nTest mapping complex emoji sequences to emotional states.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emoji_emotional_analyzer_enhanced.py\", line 169, in test_map_to_emotional_states_complex\n    self.assertIn(EmotionCategory.JOY, emotion_map)\nAssertionError: <EmotionCategory.JOY: 1> not found in {<EmotionCategory.NEUTRAL: 9>: 1.0}\n\n======================================================================\nFAIL: test_map_to_emotional_states_simple (__main__.TestEmotionMappingSystem.test_map_to_emotional_states_simple)\nTest mapping a simple emoji to multiple emotional states.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emoji_emotional_analyzer_enhanced.py\", line 159, in test_map_to_emotional_states_simple\n    self.assertGreater(emotion_map[EmotionCategory.JOY], 0.5)\nAssertionError: 0.4347826086956522 not greater than 0.5\n\n----------------------------------------------------------------------\nRan 34 tests in 0.004s\n\nFAILED (failures=8)\n",
      "duration": 0.11733460426330566
    },
    "test_emoji_sequence_optimizer.py": {
      "success": false,
      "output": "EEEEE.EEEEE\n======================================================================\nERROR: test_basic_optimization (__main__.TestEmojiSequenceOptimizer.test_basic_optimization)\nTest basic sequence optimization with default context.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emoji_sequence_optimizer.py\", line 38, in test_basic_optimization\n    result = self.optimizer.optimize_sequence(self.technical_sequence)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_sequence_optimizer.py\", line 262, in optimize_sequence\n    result = self._optimize_sequence(emojis, context)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_sequence_optimizer.py\", line 425, in _optimize_sequence\n    optimized_emojis = self._remove_redundant_emojis(emojis, context)\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_sequence_optimizer.py\", line 509, in _remove_redundant_emojis\n    emoji_metadata = self.knowledge_base.get_emoji(emoji)\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'EmojiKnowledgeBase' object has no attribute 'get_emoji'. Did you mean: 'add_emoji'?\n\n======================================================================\nERROR: test_batch_optimization (__main__.TestEmojiSequenceOptimizer.test_batch_optimization)\nTest optimizing multiple sequences in batch.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emoji_sequence_optimizer.py\", line 291, in test_batch_optimization\n    results = self.optimizer.optimize_sequence_batch(sequences, context)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_sequence_optimizer.py\", line 284, in optimize_sequence_batch\n    results.append(self.optimize_sequence(sequence, context))\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_sequence_optimizer.py\", line 262, in optimize_sequence\n    result = self._optimize_sequence(emojis, context)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_sequence_optimizer.py\", line 425, in _optimize_sequence\n    optimized_emojis = self._remove_redundant_emojis(emojis, context)\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_sequence_optimizer.py\", line 509, in _remove_redundant_emojis\n    emoji_metadata = self.knowledge_base.get_emoji(emoji)\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'EmojiKnowledgeBase' object has no attribute 'get_emoji'. Did you mean: 'add_emoji'?\n\n======================================================================\nERROR: test_cultural_context_adaptation (__main__.TestEmojiSequenceOptimizer.test_cultural_context_adaptation)\nTest cultural context adaptation.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emoji_sequence_optimizer.py\", line 118, in test_cultural_context_adaptation\n    global_result = self.optimizer.optimize_sequence(self.social_sequence, global_context)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_sequence_optimizer.py\", line 262, in optimize_sequence\n    result = self._optimize_sequence(emojis, context)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_sequence_optimizer.py\", line 425, in _optimize_sequence\n    optimized_emojis = self._remove_redundant_emojis(emojis, context)\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_sequence_optimizer.py\", line 509, in _remove_redundant_emojis\n    emoji_metadata = self.knowledge_base.get_emoji(emoji)\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'EmojiKnowledgeBase' object has no attribute 'get_emoji'. Did you mean: 'add_emoji'?\n\n======================================================================\nERROR: test_custom_optimization_profile (__main__.TestEmojiSequenceOptimizer.test_custom_optimization_profile)\nTest creating and using custom optimization profiles.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emoji_sequence_optimizer.py\", line 200, in test_custom_optimization_profile\n    custom_result = self.optimizer.optimize_sequence(self.complex_sequence, custom_context)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_sequence_optimizer.py\", line 262, in optimize_sequence\n    result = self._optimize_sequence(emojis, context)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_sequence_optimizer.py\", line 425, in _optimize_sequence\n    optimized_emojis = self._remove_redundant_emojis(emojis, context)\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_sequence_optimizer.py\", line 509, in _remove_redundant_emojis\n    emoji_metadata = self.knowledge_base.get_emoji(emoji)\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'EmojiKnowledgeBase' object has no attribute 'get_emoji'. Did you mean: 'add_emoji'?\n\n======================================================================\nERROR: test_domain_specific_optimization (__main__.TestEmojiSequenceOptimizer.test_domain_specific_optimization)\nTest domain-specific optimization.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emoji_sequence_optimizer.py\", line 90, in test_domain_specific_optimization\n    tech_result = self.optimizer.optimize_sequence(self.complex_sequence, tech_context)\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_sequence_optimizer.py\", line 262, in optimize_sequence\n    result = self._optimize_sequence(emojis, context)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_sequence_optimizer.py\", line 425, in _optimize_sequence\n    optimized_emojis = self._remove_redundant_emojis(emojis, context)\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_sequence_optimizer.py\", line 509, in _remove_redundant_emojis\n    emoji_metadata = self.knowledge_base.get_emoji(emoji)\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'EmojiKnowledgeBase' object has no attribute 'get_emoji'. Did you mean: 'add_emoji'?\n\n======================================================================\nERROR: test_grouping_strategies (__main__.TestEmojiSequenceOptimizer.test_grouping_strategies)\nTest different grouping strategies.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emoji_sequence_optimizer.py\", line 146, in test_grouping_strategies\n    semantic_result = self.optimizer.optimize_sequence(self.complex_sequence, semantic_context)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_sequence_optimizer.py\", line 262, in optimize_sequence\n    result = self._optimize_sequence(emojis, context)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_sequence_optimizer.py\", line 425, in _optimize_sequence\n    optimized_emojis = self._remove_redundant_emojis(emojis, context)\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_sequence_optimizer.py\", line 509, in _remove_redundant_emojis\n    emoji_metadata = self.knowledge_base.get_emoji(emoji)\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'EmojiKnowledgeBase' object has no attribute 'get_emoji'. Did you mean: 'add_emoji'?\n\n======================================================================\nERROR: test_optimization_profiles (__main__.TestEmojiSequenceOptimizer.test_optimization_profiles)\nTest different optimization profiles.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emoji_sequence_optimizer.py\", line 55, in test_optimization_profiles\n    precise_result = self.optimizer.optimize_sequence(self.complex_sequence, precise_context)\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_sequence_optimizer.py\", line 262, in optimize_sequence\n    result = self._optimize_sequence(emojis, context)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_sequence_optimizer.py\", line 425, in _optimize_sequence\n    optimized_emojis = self._remove_redundant_emojis(emojis, context)\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_sequence_optimizer.py\", line 509, in _remove_redundant_emojis\n    emoji_metadata = self.knowledge_base.get_emoji(emoji)\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'EmojiKnowledgeBase' object has no attribute 'get_emoji'. Did you mean: 'add_emoji'?\n\n======================================================================\nERROR: test_optimization_with_constraints (__main__.TestEmojiSequenceOptimizer.test_optimization_with_constraints)\nTest optimization with various constraints.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emoji_sequence_optimizer.py\", line 237, in test_optimization_with_constraints\n    length_result = self.optimizer.optimize_sequence(self.complex_sequence, length_context)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_sequence_optimizer.py\", line 262, in optimize_sequence\n    result = self._optimize_sequence(emojis, context)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_sequence_optimizer.py\", line 425, in _optimize_sequence\n    optimized_emojis = self._remove_redundant_emojis(emojis, context)\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_sequence_optimizer.py\", line 509, in _remove_redundant_emojis\n    emoji_metadata = self.knowledge_base.get_emoji(emoji)\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'EmojiKnowledgeBase' object has no attribute 'get_emoji'. Did you mean: 'add_emoji'?\n\n======================================================================\nERROR: test_sequence_analysis (__main__.TestEmojiSequenceOptimizer.test_sequence_analysis)\nTest analyzing emoji sequences without optimizing.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emoji_sequence_optimizer.py\", line 209, in test_sequence_analysis\n    analysis = self.optimizer.analyze_sequence(self.technical_sequence)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_sequence_optimizer.py\", line 368, in analyze_sequence\n    \"familiarity\": self._calculate_familiarity_score(emojis, context),\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_sequence_optimizer.py\", line 1600, in _calculate_familiarity_score\n    total_familiarity += self._get_emoji_familiarity_score(emoji)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_sequence_optimizer.py\", line 1442, in _get_emoji_familiarity_score\n    metadata = self.knowledge_base.get_emoji(emoji)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'EmojiKnowledgeBase' object has no attribute 'get_emoji'. Did you mean: 'add_emoji'?\n\n======================================================================\nERROR: test_weight_calculations (__main__.TestEmojiSequenceOptimizer.test_weight_calculations)\nTest calculations of various weighted scores.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emoji_sequence_optimizer.py\", line 330, in test_weight_calculations\n    result = self.optimizer.optimize_sequence(self.technical_sequence, context)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_sequence_optimizer.py\", line 262, in optimize_sequence\n    result = self._optimize_sequence(emojis, context)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_sequence_optimizer.py\", line 425, in _optimize_sequence\n    optimized_emojis = self._remove_redundant_emojis(emojis, context)\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_sequence_optimizer.py\", line 509, in _remove_redundant_emojis\n    emoji_metadata = self.knowledge_base.get_emoji(emoji)\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'EmojiKnowledgeBase' object has no attribute 'get_emoji'. Did you mean: 'add_emoji'?\n\n----------------------------------------------------------------------\nRan 11 tests in 0.008s\n\nFAILED (errors=10)\n",
      "duration": 0.0896902084350586
    },
    "test_emoji_translation_engine.py": {
      "success": true,
      "output": "",
      "duration": 0.08051419258117676
    },
    "test_emotional_intelligence.py": {
      "success": false,
      "output": "2025-05-26 11:06:23,619 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 11:06:23,619 - CommunicationStyleAnalyzer - INFO - CommunicationStyleAnalyzer initialized\n2025-05-26 11:06:23,619 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\nE2025-05-26 11:06:23,626 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 11:06:23,626 - CommunicationStyleAnalyzer - INFO - CommunicationStyleAnalyzer initialized\n2025-05-26 11:06:23,626 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\nE2025-05-26 11:06:23,627 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 11:06:23,627 - CommunicationStyleAnalyzer - INFO - CommunicationStyleAnalyzer initialized\n2025-05-26 11:06:23,627 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\nE2025-05-26 11:06:23,628 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 11:06:23,628 - CommunicationStyleAnalyzer - INFO - CommunicationStyleAnalyzer initialized\n2025-05-26 11:06:23,628 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\nE2025-05-26 11:06:23,628 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 11:06:23,628 - CommunicationStyleAnalyzer - INFO - CommunicationStyleAnalyzer initialized\n2025-05-26 11:06:23,628 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\nF2025-05-26 11:06:23,630 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 11:06:23,630 - CommunicationStyleAnalyzer - INFO - CommunicationStyleAnalyzer initialized\n2025-05-26 11:06:23,630 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\nE2025-05-26 11:06:23,631 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 11:06:23,631 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\nE2025-05-26 11:06:23,632 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 11:06:23,632 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\nE2025-05-26 11:06:23,633 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 11:06:23,633 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\nE2025-05-26 11:06:23,633 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 11:06:23,633 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\nE\n======================================================================\nERROR: test_emotion_detection_accuracy (__main__.TestEmotionalIntelligence.test_emotion_detection_accuracy)\nTest that emotions are correctly detected in messages.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emotional_intelligence.py\", line 176, in test_emotion_detection_accuracy\n    joy_emotions = self.emotional_intelligence.detect_emotions(joy_message)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emotional_intelligence.py\", line 734, in detect_emotions\n    signal = EmotionSignal(\n             ^^^^^^^^^^^^^^\n  File \"<string>\", line 7, in __init__\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emotional_intelligence.py\", line 73, in <lambda>\n    timestamp: str = field(default_factory=lambda: datetime.now(datetime.UTC).isoformat())\n                                                                ^^^^^^^^^^^^\nAttributeError: type object 'datetime.datetime' has no attribute 'UTC'\n\n======================================================================\nERROR: test_emotional_distance_principle (__main__.TestEmotionalIntelligence.test_emotional_distance_principle)\nTest that the 'Emotional Distance as Preservation' principle is applied correctly.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emotional_intelligence.py\", line 258, in test_emotional_distance_principle\n    emotions = self.emotional_intelligence.detect_emotions(anger_message)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emotional_intelligence.py\", line 734, in detect_emotions\n    signal = EmotionSignal(\n             ^^^^^^^^^^^^^^\n  File \"<string>\", line 7, in __init__\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emotional_intelligence.py\", line 73, in <lambda>\n    timestamp: str = field(default_factory=lambda: datetime.now(datetime.UTC).isoformat())\n                                                                ^^^^^^^^^^^^\nAttributeError: type object 'datetime.datetime' has no attribute 'UTC'\n\n======================================================================\nERROR: test_emotional_profile_building (__main__.TestEmotionalIntelligence.test_emotional_profile_building)\nTest that emotional profiles are built correctly over multiple interactions.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emotional_intelligence.py\", line 239, in test_emotional_profile_building\n    emotions = self.emotional_intelligence.detect_emotions(message)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emotional_intelligence.py\", line 734, in detect_emotions\n    signal = EmotionSignal(\n             ^^^^^^^^^^^^^^\n  File \"<string>\", line 7, in __init__\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emotional_intelligence.py\", line 73, in <lambda>\n    timestamp: str = field(default_factory=lambda: datetime.now(datetime.UTC).isoformat())\n                                                                ^^^^^^^^^^^^\nAttributeError: type object 'datetime.datetime' has no attribute 'UTC'\n\n======================================================================\nERROR: test_integration_with_communication_style (__main__.TestEmotionalIntelligence.test_integration_with_communication_style)\nTest integration between EmotionalIntelligence and CommunicationStyleAnalyzer.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emotional_intelligence.py\", line 283, in test_integration_with_communication_style\n    history = MessageHistory(agent_id=agent_id)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\communication_style_analyzer.py\", line 93, in __init__\n    self.last_updated = datetime.now(datetime.UTC).isoformat()\n                                     ^^^^^^^^^^^^\nAttributeError: type object 'datetime.datetime' has no attribute 'UTC'\n\n======================================================================\nERROR: test_principled_emotional_responses (__main__.TestEmotionalIntelligence.test_principled_emotional_responses)\nTest that emotional responses align with principles.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emotional_intelligence.py\", line 328, in test_principled_emotional_responses\n    emotions = self.emotional_intelligence.detect_emotions(crisis_message)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emotional_intelligence.py\", line 710, in detect_emotions\n    detected_emotions.append(EmotionSignal(\n                             ^^^^^^^^^^^^^^\n  File \"<string>\", line 7, in __init__\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emotional_intelligence.py\", line 73, in <lambda>\n    timestamp: str = field(default_factory=lambda: datetime.now(datetime.UTC).isoformat())\n                                                                ^^^^^^^^^^^^\nAttributeError: type object 'datetime.datetime' has no attribute 'UTC'\n\n======================================================================\nERROR: test_response_to_anger_in_conflict (__main__.TestEmotionalResponseScenarios.test_response_to_anger_in_conflict)\nTest appropriate responses to angry messages in conflict situations.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emotional_intelligence.py\", line 390, in test_response_to_anger_in_conflict\n    emotions = self.emotional_intelligence.detect_emotions(anger_message)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emotional_intelligence.py\", line 710, in detect_emotions\n    detected_emotions.append(EmotionSignal(\n                             ^^^^^^^^^^^^^^\n  File \"<string>\", line 7, in __init__\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emotional_intelligence.py\", line 73, in <lambda>\n    timestamp: str = field(default_factory=lambda: datetime.now(datetime.UTC).isoformat())\n                                                                ^^^^^^^^^^^^\nAttributeError: type object 'datetime.datetime' has no attribute 'UTC'\n\n======================================================================\nERROR: test_response_to_fear_in_crisis (__main__.TestEmotionalResponseScenarios.test_response_to_fear_in_crisis)\nTest appropriate responses to fearful messages in crisis situations.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emotional_intelligence.py\", line 416, in test_response_to_fear_in_crisis\n    emotions = self.emotional_intelligence.detect_emotions(fear_message)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emotional_intelligence.py\", line 734, in detect_emotions\n    signal = EmotionSignal(\n             ^^^^^^^^^^^^^^\n  File \"<string>\", line 7, in __init__\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emotional_intelligence.py\", line 73, in <lambda>\n    timestamp: str = field(default_factory=lambda: datetime.now(datetime.UTC).isoformat())\n                                                                ^^^^^^^^^^^^\nAttributeError: type object 'datetime.datetime' has no attribute 'UTC'\n\n======================================================================\nERROR: test_response_to_joy (__main__.TestEmotionalResponseScenarios.test_response_to_joy)\nTest appropriate responses to joyful messages.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emotional_intelligence.py\", line 366, in test_response_to_joy\n    emotions = self.emotional_intelligence.detect_emotions(joy_message)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emotional_intelligence.py\", line 734, in detect_emotions\n    signal = EmotionSignal(\n             ^^^^^^^^^^^^^^\n  File \"<string>\", line 7, in __init__\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emotional_intelligence.py\", line 73, in <lambda>\n    timestamp: str = field(default_factory=lambda: datetime.now(datetime.UTC).isoformat())\n                                                                ^^^^^^^^^^^^\nAttributeError: type object 'datetime.datetime' has no attribute 'UTC'\n\n======================================================================\nERROR: test_response_to_sensitive_topic (__main__.TestEmotionalResponseScenarios.test_response_to_sensitive_topic)\nTest appropriate responses to sensitive topics.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emotional_intelligence.py\", line 442, in test_response_to_sensitive_topic\n    emotions = self.emotional_intelligence.detect_emotions(sensitive_message)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emotional_intelligence.py\", line 734, in detect_emotions\n    signal = EmotionSignal(\n             ^^^^^^^^^^^^^^\n  File \"<string>\", line 7, in __init__\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emotional_intelligence.py\", line 73, in <lambda>\n    timestamp: str = field(default_factory=lambda: datetime.now(datetime.UTC).isoformat())\n                                                                ^^^^^^^^^^^^\nAttributeError: type object 'datetime.datetime' has no attribute 'UTC'\n\n======================================================================\nFAIL: test_interaction_type_detection (__main__.TestEmotionalIntelligence.test_interaction_type_detection)\nTest that interaction types are correctly categorized.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emotional_intelligence.py\", line 213, in test_interaction_type_detection\n    self.assertEqual(\nAssertionError: <InteractionType.CRISIS: 3> != <InteractionType.CELEBRATION: 4>\n\n----------------------------------------------------------------------\nRan 10 tests in 0.016s\n\nFAILED (failures=1, errors=9)\n",
      "duration": 0.10207223892211914
    },
    "test_endpoints.py": {
      "success": false,
      "output": "Traceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_endpoints.py\", line 177, in <module>\n    sys.exit(main())\n             ^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_endpoints.py\", line 163, in main\n    print(f\"Home Endpoint: {'\\u2713' if home_result else '\\u2717'}\")\n  File \"C:\\Users\\every\\miniconda3\\Lib\\site-packages\\colorama\\ansitowin32.py\", line 47, in write\n    self.__convertor.write(text)\n  File \"C:\\Users\\every\\miniconda3\\Lib\\site-packages\\colorama\\ansitowin32.py\", line 177, in write\n    self.write_and_convert(text)\n  File \"C:\\Users\\every\\miniconda3\\Lib\\site-packages\\colorama\\ansitowin32.py\", line 205, in write_and_convert\n    self.write_plain_text(text, cursor, len(text))\n  File \"C:\\Users\\every\\miniconda3\\Lib\\site-packages\\colorama\\ansitowin32.py\", line 210, in write_plain_text\n    self.wrapped.write(text[start:end])\n  File \"C:\\Users\\every\\miniconda3\\Lib\\encodings\\cp1252.py\", line 19, in encode\n    return codecs.charmap_encode(input,self.errors,encoding_table)[0]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nUnicodeEncodeError: 'charmap' codec can't encode character '\\u2717' in position 15: character maps to <undefined>\n",
      "duration": 16.72454071044922
    },
    "test_enhanced_principle_evaluator.py": {
      "success": false,
      "output": "",
      "duration": 0.053075551986694336
    },
    "test_fairness_evaluation.py": {
      "success": false,
      "output": "2025-05-26 11:06:40,498 - FairnessEvaluationIntegrator - INFO - PrincipleEngine successfully extended with fairness evaluation capabilities\n2025-05-26 11:06:40,498 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 11:06:40,498 - FairnessEvaluation - INFO - Evaluating fairness of action from agent test-agent\nE2025-05-26 11:06:40,499 - FairnessEvaluationIntegrator - INFO - PrincipleEngine already has fairness evaluation capabilities\n2025-05-26 11:06:40,499 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 11:06:40,499 - FairnessEvaluation - INFO - Evaluating fairness of action from agent test-agent\nE2025-05-26 11:06:40,499 - FairnessEvaluationIntegrator - INFO - PrincipleEngine already has fairness evaluation capabilities\n2025-05-26 11:06:40,499 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 11:06:40,499 - FairnessEvaluation - INFO - Evaluating fairness of action from agent test-agent\nE2025-05-26 11:06:40,500 - FairnessEvaluationIntegrator - INFO - PrincipleEngine already has fairness evaluation capabilities\n2025-05-26 11:06:40,500 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 11:06:40,500 - FairnessEvaluation - INFO - Evaluating fairness of action from agent test-agent\nE2025-05-26 11:06:40,500 - FairnessEvaluationIntegrator - INFO - PrincipleEngine already has fairness evaluation capabilities\n2025-05-26 11:06:40,500 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 11:06:40,500 - FairnessEvaluation - INFO - Evaluating fairness of action from agent test-agent\nE2025-05-26 11:06:40,500 - FairnessEvaluationIntegrator - INFO - PrincipleEngine already has fairness evaluation capabilities\n2025-05-26 11:06:40,500 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 11:06:40,500 - FairnessEvaluation - INFO - Evaluating fairness of action from agent pattern-test\nE2025-05-26 11:06:40,501 - FairnessEvaluationIntegrator - INFO - PrincipleEngine already has fairness evaluation capabilities\n2025-05-26 11:06:40,501 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 11:06:40,501 - FairnessEvaluationIntegrator - INFO - PrincipleEngine already has fairness evaluation capabilities\n.2025-05-26 11:06:40,501 - FairnessEvaluationIntegrator - INFO - PrincipleEngine already has fairness evaluation capabilities\n2025-05-26 11:06:40,501 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 11:06:40,501 - FairnessEvaluation - INFO - Evaluating fairness of action from agent allocator-agent\nE2025-05-26 11:06:40,501 - FairnessEvaluationIntegrator - INFO - PrincipleEngine already has fairness evaluation capabilities\n2025-05-26 11:06:40,501 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 11:06:40,501 - FairnessEvaluation - INFO - Evaluating fairness of action from agent test-agent\nE2025-05-26 11:06:40,501 - FairnessEvaluationIntegrator - INFO - PrincipleEngine already has fairness evaluation capabilities\n2025-05-26 11:06:40,501 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 11:06:40,501 - FairnessEvaluation - INFO - Evaluating fairness of action from agent test-agent\nE\n======================================================================\nERROR: test_alternative_suggestions (__main__.TestFairnessEvaluation.test_alternative_suggestions)\nTest that alternative suggestions are valid and fix the identified issues.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_fairness_evaluation.py\", line 337, in test_alternative_suggestions\n    result = self.engine.evaluate_fairness(\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_fairness_evaluation.py\", line 323, in mock_evaluate_fairness\n    result = original_evaluate_fairness(action, historical_actions, agent_id)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\fairness_evaluation.py\", line 57, in evaluate_fairness\n    \"timestamp\": datetime.now(datetime.UTC).isoformat(),\n                              ^^^^^^^^^^^^\nAttributeError: type object 'datetime.datetime' has no attribute 'UTC'\n\n======================================================================\nERROR: test_consistent_rule_application (__main__.TestFairnessEvaluation.test_consistent_rule_application)\nTest that rules are applied consistently across similar actions.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_fairness_evaluation.py\", line 295, in test_consistent_rule_application\n    result1 = self.engine.evaluate_fairness(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_fairness_evaluation.py\", line 282, in mock_evaluate_fairness\n    result = original_evaluate_fairness(action, historical_actions, agent_id)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\fairness_evaluation.py\", line 57, in evaluate_fairness\n    \"timestamp\": datetime.now(datetime.UTC).isoformat(),\n                              ^^^^^^^^^^^^\nAttributeError: type object 'datetime.datetime' has no attribute 'UTC'\n\n======================================================================\nERROR: test_empty_historical_actions (__main__.TestFairnessEvaluation.test_empty_historical_actions)\nTest handling of empty historical actions.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_fairness_evaluation.py\", line 509, in test_empty_historical_actions\n    result = self.engine.evaluate_fairness(\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\fairness_evaluation.py\", line 57, in evaluate_fairness\n    \"timestamp\": datetime.now(datetime.UTC).isoformat(),\n                              ^^^^^^^^^^^^\nAttributeError: type object 'datetime.datetime' has no attribute 'UTC'\n\n======================================================================\nERROR: test_evaluation_result_structure (__main__.TestFairnessEvaluation.test_evaluation_result_structure)\nTest that evaluation results have the expected structure.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_fairness_evaluation.py\", line 423, in test_evaluation_result_structure\n    result = self.engine.evaluate_fairness(\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\fairness_evaluation.py\", line 57, in evaluate_fairness\n    \"timestamp\": datetime.now(datetime.UTC).isoformat(),\n                              ^^^^^^^^^^^^\nAttributeError: type object 'datetime.datetime' has no attribute 'UTC'\n\n======================================================================\nERROR: test_fair_action_evaluation (__main__.TestFairnessEvaluation.test_fair_action_evaluation)\nTest that fair actions receive high fairness scores.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_fairness_evaluation.py\", line 156, in test_fair_action_evaluation\n    result = self.engine.evaluate_fairness(\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_fairness_evaluation.py\", line 147, in mock_evaluate_fairness\n    result = original_evaluate_fairness(action, historical_actions, agent_id)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\fairness_evaluation.py\", line 57, in evaluate_fairness\n    \"timestamp\": datetime.now(datetime.UTC).isoformat(),\n                              ^^^^^^^^^^^^\nAttributeError: type object 'datetime.datetime' has no attribute 'UTC'\n\n======================================================================\nERROR: test_historical_pattern_learning (__main__.TestFairnessEvaluation.test_historical_pattern_learning)\nTest that the evaluation learns patterns from historical actions.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_fairness_evaluation.py\", line 488, in test_historical_pattern_learning\n    result_conforming = self.engine.evaluate_fairness(\n                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_fairness_evaluation.py\", line 475, in mock_evaluate_fairness\n    result = original_evaluate_fairness(action, historical_actions, agent_id)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\fairness_evaluation.py\", line 57, in evaluate_fairness\n    \"timestamp\": datetime.now(datetime.UTC).isoformat(),\n                              ^^^^^^^^^^^^\nAttributeError: type object 'datetime.datetime' has no attribute 'UTC'\n\n======================================================================\nERROR: test_resource_allocation_bias_detection (__main__.TestFairnessEvaluation.test_resource_allocation_bias_detection)\nTest that biased resource allocations are detected.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_fairness_evaluation.py\", line 228, in test_resource_allocation_bias_detection\n    result = self.engine.evaluate_fairness(\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_fairness_evaluation.py\", line 219, in mock_evaluate_fairness\n    result = original_evaluate_fairness(action, historical_actions, agent_id)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\fairness_evaluation.py\", line 57, in evaluate_fairness\n    \"timestamp\": datetime.now(datetime.UTC).isoformat(),\n                              ^^^^^^^^^^^^\nAttributeError: type object 'datetime.datetime' has no attribute 'UTC'\n\n======================================================================\nERROR: test_special_treatment_detection (__main__.TestFairnessEvaluation.test_special_treatment_detection)\nTest detection of preferential treatment.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_fairness_evaluation.py\", line 397, in test_special_treatment_detection\n    result = self.engine.evaluate_fairness(\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\fairness_evaluation.py\", line 57, in evaluate_fairness\n    \"timestamp\": datetime.now(datetime.UTC).isoformat(),\n                              ^^^^^^^^^^^^\nAttributeError: type object 'datetime.datetime' has no attribute 'UTC'\n\n======================================================================\nERROR: test_unfair_action_evaluation (__main__.TestFairnessEvaluation.test_unfair_action_evaluation)\nTest that unfair actions receive lower fairness scores.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_fairness_evaluation.py\", line 185, in test_unfair_action_evaluation\n    result = self.engine.evaluate_fairness(\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\fairness_evaluation.py\", line 57, in evaluate_fairness\n    \"timestamp\": datetime.now(datetime.UTC).isoformat(),\n                              ^^^^^^^^^^^^\nAttributeError: type object 'datetime.datetime' has no attribute 'UTC'\n\n----------------------------------------------------------------------\nRan 10 tests in 0.004s\n\nFAILED (errors=9)\n",
      "duration": 0.08746051788330078
    },
    "test_framework.py": {
      "success": true,
      "output": "",
      "duration": 0.06684684753417969
    },
    "test_human_interaction_styler.py": {
      "success": false,
      "output": "2025-05-26 11:06:40,664 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\n2025-05-26 11:06:40,664 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 11:06:40,664 - HumanInteractionStyler - INFO - HumanInteractionStyler initialized\nE2025-05-26 11:06:40,666 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\n2025-05-26 11:06:40,666 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 11:06:40,666 - HumanInteractionStyler - INFO - HumanInteractionStyler initialized\nE2025-05-26 11:06:40,667 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\n2025-05-26 11:06:40,667 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 11:06:40,667 - HumanInteractionStyler - INFO - HumanInteractionStyler initialized\nE2025-05-26 11:06:40,668 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\n2025-05-26 11:06:40,668 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 11:06:40,668 - HumanInteractionStyler - INFO - HumanInteractionStyler initialized\nE2025-05-26 11:06:40,675 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\n2025-05-26 11:06:40,675 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 11:06:40,675 - HumanInteractionStyler - INFO - HumanInteractionStyler initialized\nE2025-05-26 11:06:40,676 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\n2025-05-26 11:06:40,676 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 11:06:40,676 - HumanInteractionStyler - INFO - HumanInteractionStyler initialized\nE2025-05-26 11:06:40,676 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\n2025-05-26 11:06:40,676 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 11:06:40,677 - HumanInteractionStyler - INFO - HumanInteractionStyler initialized\nE2025-05-26 11:06:40,677 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\n2025-05-26 11:06:40,677 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 11:06:40,677 - HumanInteractionStyler - INFO - HumanInteractionStyler initialized\nE2025-05-26 11:06:40,678 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\n2025-05-26 11:06:40,678 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 11:06:40,678 - HumanInteractionStyler - INFO - HumanInteractionStyler initialized\nE2025-05-26 11:06:40,679 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\n2025-05-26 11:06:40,679 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 11:06:40,679 - HumanInteractionStyler - INFO - HumanInteractionStyler initialized\nE2025-05-26 11:06:40,679 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\n2025-05-26 11:06:40,679 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 11:06:40,680 - HumanInteractionStyler - INFO - HumanInteractionStyler initialized\nE\n======================================================================\nERROR: test_authenticity_principle (__main__.TestHumanInteractionStyler.test_authenticity_principle)\nTest the 'Authenticity Beyond Performance' principle.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_human_interaction_styler.py\", line 296, in test_authenticity_principle\n    authentic_profile = self.styler.get_or_create_profile(authentic_id)\n                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\human_interaction_styler.py\", line 302, in get_or_create_profile\n    profile = HumanProfile(human_id=human_id, name=name)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"<string>\", line 20, in __init__\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\human_interaction_styler.py\", line 110, in <lambda>\n    last_updated: str = field(default_factory=lambda: datetime.now(datetime.UTC).isoformat())\n                                                                   ^^^^^^^^^^^^\nAttributeError: type object 'datetime.datetime' has no attribute 'UTC'\n\n======================================================================\nERROR: test_cultural_adaptation (__main__.TestHumanInteractionStyler.test_cultural_adaptation)\nTest adaptation based on cultural context.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_human_interaction_styler.py\", line 267, in test_cultural_adaptation\n    collectivist_profile = self.styler.get_or_create_profile(collectivist_id)\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\human_interaction_styler.py\", line 302, in get_or_create_profile\n    profile = HumanProfile(human_id=human_id, name=name)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"<string>\", line 20, in __init__\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\human_interaction_styler.py\", line 110, in <lambda>\n    last_updated: str = field(default_factory=lambda: datetime.now(datetime.UTC).isoformat())\n                                                                   ^^^^^^^^^^^^\nAttributeError: type object 'datetime.datetime' has no attribute 'UTC'\n\n======================================================================\nERROR: test_directness_detection (__main__.TestHumanInteractionStyler.test_directness_detection)\nTest detection of directness preferences from messages.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_human_interaction_styler.py\", line 115, in test_directness_detection\n    self.styler.update_profile_from_message(self.test_message_direct, human_id)\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\human_interaction_styler.py\", line 314, in update_profile_from_message\n    profile = self.get_or_create_profile(human_id)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\human_interaction_styler.py\", line 302, in get_or_create_profile\n    profile = HumanProfile(human_id=human_id, name=name)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"<string>\", line 20, in __init__\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\human_interaction_styler.py\", line 110, in <lambda>\n    last_updated: str = field(default_factory=lambda: datetime.now(datetime.UTC).isoformat())\n                                                                   ^^^^^^^^^^^^\nAttributeError: type object 'datetime.datetime' has no attribute 'UTC'\n\n======================================================================\nERROR: test_emotional_state_detection (__main__.TestHumanInteractionStyler.test_emotional_state_detection)\nTest detection of emotional states from messages.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_human_interaction_styler.py\", line 130, in test_emotional_state_detection\n    emotions = self.styler.detect_emotional_state(self.test_message_emotional)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\human_interaction_styler.py\", line 309, in detect_emotional_state\n    emotions, _, _ = self.emotional_intelligence.process_message(message)\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emotional_intelligence.py\", line 1257, in process_message\n    emotion_signals = self.detect_emotions(message)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emotional_intelligence.py\", line 734, in detect_emotions\n    signal = EmotionSignal(\n             ^^^^^^^^^^^^^^\n  File \"<string>\", line 7, in __init__\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emotional_intelligence.py\", line 73, in <lambda>\n    timestamp: str = field(default_factory=lambda: datetime.now(datetime.UTC).isoformat())\n                                                                ^^^^^^^^^^^^\nAttributeError: type object 'datetime.datetime' has no attribute 'UTC'\n\n======================================================================\nERROR: test_formality_detection (__main__.TestHumanInteractionStyler.test_formality_detection)\nTest detection of formality preferences from messages.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_human_interaction_styler.py\", line 99, in test_formality_detection\n    self.styler.update_profile_from_message(self.test_message_formal, human_id)\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\human_interaction_styler.py\", line 314, in update_profile_from_message\n    profile = self.get_or_create_profile(human_id)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\human_interaction_styler.py\", line 302, in get_or_create_profile\n    profile = HumanProfile(human_id=human_id, name=name)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"<string>\", line 20, in __init__\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\human_interaction_styler.py\", line 110, in <lambda>\n    last_updated: str = field(default_factory=lambda: datetime.now(datetime.UTC).isoformat())\n                                                                   ^^^^^^^^^^^^\nAttributeError: type object 'datetime.datetime' has no attribute 'UTC'\n\n======================================================================\nERROR: test_profile_creation (__main__.TestHumanInteractionStyler.test_profile_creation)\nTest creating and retrieving human profiles.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_human_interaction_styler.py\", line 73, in test_profile_creation\n    profile = self.styler.get_or_create_profile(human_id, \"Test User\")\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\human_interaction_styler.py\", line 302, in get_or_create_profile\n    profile = HumanProfile(human_id=human_id, name=name)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"<string>\", line 20, in __init__\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\human_interaction_styler.py\", line 110, in <lambda>\n    last_updated: str = field(default_factory=lambda: datetime.now(datetime.UTC).isoformat())\n                                                                   ^^^^^^^^^^^^\nAttributeError: type object 'datetime.datetime' has no attribute 'UTC'\n\n======================================================================\nERROR: test_profile_serialization (__main__.TestHumanInteractionStyler.test_profile_serialization)\nTest profile serialization and deserialization.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_human_interaction_styler.py\", line 327, in test_profile_serialization\n    profile = self.styler.get_or_create_profile(human_id)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\human_interaction_styler.py\", line 302, in get_or_create_profile\n    profile = HumanProfile(human_id=human_id, name=name)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"<string>\", line 20, in __init__\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\human_interaction_styler.py\", line 110, in <lambda>\n    last_updated: str = field(default_factory=lambda: datetime.now(datetime.UTC).isoformat())\n                                                                   ^^^^^^^^^^^^\nAttributeError: type object 'datetime.datetime' has no attribute 'UTC'\n\n======================================================================\nERROR: test_profile_update_from_message (__main__.TestHumanInteractionStyler.test_profile_update_from_message)\nTest updating a profile based on a message.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_human_interaction_styler.py\", line 143, in test_profile_update_from_message\n    initial_profile = self.styler.get_or_create_profile(human_id)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\human_interaction_styler.py\", line 302, in get_or_create_profile\n    profile = HumanProfile(human_id=human_id, name=name)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"<string>\", line 20, in __init__\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\human_interaction_styler.py\", line 110, in <lambda>\n    last_updated: str = field(default_factory=lambda: datetime.now(datetime.UTC).isoformat())\n                                                                   ^^^^^^^^^^^^\nAttributeError: type object 'datetime.datetime' has no attribute 'UTC'\n\n======================================================================\nERROR: test_response_adaptation_detail_level (__main__.TestHumanInteractionStyler.test_response_adaptation_detail_level)\nTest adaptation of responses based on detail level.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_human_interaction_styler.py\", line 186, in test_response_adaptation_detail_level\n    detailed_profile = self.styler.get_or_create_profile(detailed_id)\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\human_interaction_styler.py\", line 302, in get_or_create_profile\n    profile = HumanProfile(human_id=human_id, name=name)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"<string>\", line 20, in __init__\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\human_interaction_styler.py\", line 110, in <lambda>\n    last_updated: str = field(default_factory=lambda: datetime.now(datetime.UTC).isoformat())\n                                                                   ^^^^^^^^^^^^\nAttributeError: type object 'datetime.datetime' has no attribute 'UTC'\n\n======================================================================\nERROR: test_response_adaptation_directness (__main__.TestHumanInteractionStyler.test_response_adaptation_directness)\nTest adaptation of responses based on directness.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_human_interaction_styler.py\", line 229, in test_response_adaptation_directness\n    direct_profile = self.styler.get_or_create_profile(direct_id)\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\human_interaction_styler.py\", line 302, in get_or_create_profile\n    profile = HumanProfile(human_id=human_id, name=name)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"<string>\", line 20, in __init__\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\human_interaction_styler.py\", line 110, in <lambda>\n    last_updated: str = field(default_factory=lambda: datetime.now(datetime.UTC).isoformat())\n                                                                   ^^^^^^^^^^^^\nAttributeError: type object 'datetime.datetime' has no attribute 'UTC'\n\n======================================================================\nERROR: test_response_adaptation_formality (__main__.TestHumanInteractionStyler.test_response_adaptation_formality)\nTest adaptation of responses based on formality.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_human_interaction_styler.py\", line 160, in test_response_adaptation_formality\n    formal_profile = self.styler.get_or_create_profile(formal_id)\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\human_interaction_styler.py\", line 302, in get_or_create_profile\n    profile = HumanProfile(human_id=human_id, name=name)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"<string>\", line 20, in __init__\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\human_interaction_styler.py\", line 110, in <lambda>\n    last_updated: str = field(default_factory=lambda: datetime.now(datetime.UTC).isoformat())\n                                                                   ^^^^^^^^^^^^\nAttributeError: type object 'datetime.datetime' has no attribute 'UTC'\n\n----------------------------------------------------------------------\nRan 11 tests in 0.017s\n\nFAILED (errors=11)\n",
      "duration": 0.1123361587524414
    },
    "test_llm_integration_mock.py": {
      "success": false,
      "output": "Traceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_llm_integration_mock.py\", line 22, in <module>\n    from principle_engine_llm_enhanced import EnhancedPrincipleEngineLLM\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\principle_engine_llm_enhanced.py\", line 17, in <module>\n    from principle_engine_llm import LLMPrincipleEvaluator\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\principle_engine_llm.py\", line 21, in <module>\n    from agent_registry_llm_integration import LLMAgentRegistry\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\agent_registry_llm_integration.py\", line 16, in <module>\n    from openai_llm_adapter import OpenAIGPTAdapter\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\openai_llm_adapter.py\", line 21, in <module>\n    from llm_adapter_interface import (\nImportError: cannot import name 'AuthenticationError' from 'llm_adapter_interface' (C:\\Users\\every\\Desktop\\Alex Familiar\\src\\llm_adapter_interface.py)\n",
      "duration": 0.41364526748657227
    },
    "test_media_content_processor.py": {
      "success": false,
      "output": "2025-05-26 11:06:41,845 - MediaContentProcessor - WARNING - Some media processing features will be limited. Missing dependencies: reportlab\n2025-05-26 11:06:41,845 - MediaContentProcessor - INFO - MediaContentProcessor initialized for agent test_agent\n.2025-05-26 11:06:41,845 - MediaContentProcessor - WARNING - Some media processing features will be limited. Missing dependencies: reportlab\n2025-05-26 11:06:41,845 - MediaContentProcessor - INFO - MediaContentProcessor initialized for agent test_agent\nE2025-05-26 11:06:41,847 - MediaContentProcessor - WARNING - Some media processing features will be limited. Missing dependencies: reportlab\n2025-05-26 11:06:41,847 - MediaContentProcessor - INFO - MediaContentProcessor initialized for agent test_agent\nF2025-05-26 11:06:41,848 - MediaContentProcessor - WARNING - Some media processing features will be limited. Missing dependencies: reportlab\n2025-05-26 11:06:41,848 - MediaContentProcessor - INFO - MediaContentProcessor initialized for agent test_agent\nE2025-05-26 11:06:41,849 - MediaContentProcessor - WARNING - Some media processing features will be limited. Missing dependencies: reportlab\n2025-05-26 11:06:41,849 - MediaContentProcessor - INFO - MediaContentProcessor initialized for agent test_agent\n.2025-05-26 11:06:41,849 - MediaContentProcessor - WARNING - Some media processing features will be limited. Missing dependencies: reportlab\n2025-05-26 11:06:41,849 - MediaContentProcessor - INFO - MediaContentProcessor initialized for agent test_agent\n.2025-05-26 11:06:41,850 - MediaContentProcessor - WARNING - Some media processing features will be limited. Missing dependencies: reportlab\n2025-05-26 11:06:41,850 - MediaContentProcessor - INFO - MediaContentProcessor initialized for agent test_agent\n.2025-05-26 11:06:41,850 - MediaContentProcessor - WARNING - Some media processing features will be limited. Missing dependencies: reportlab\n2025-05-26 11:06:41,850 - MediaContentProcessor - INFO - MediaContentProcessor initialized for agent test_agent\n.2025-05-26 11:06:41,851 - MediaContentProcessor - WARNING - Some media processing features will be limited. Missing dependencies: reportlab\n2025-05-26 11:06:41,851 - MediaContentProcessor - INFO - MediaContentProcessor initialized for agent test_agent\n.\n======================================================================\nERROR: test_create_image (__main__.TestMediaContentProcessor.test_create_image)\nTest creating an image content entry.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\miniconda3\\Lib\\unittest\\mock.py\", line 1396, in patched\n    return func(*newargs, **newkeywargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_media_content_processor.py\", line 95, in test_create_image\n    self.assertEqual(image_content.media_type, MediaType.IMAGE)\n                     ^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'NoneType' object has no attribute 'media_type'\n\n======================================================================\nERROR: test_document_content_serialization (__main__.TestMediaContentProcessor.test_document_content_serialization)\nTest DocumentContent serialization and deserialization.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_media_content_processor.py\", line 324, in test_document_content_serialization\n    restored_doc = DocumentContent.from_dict(doc_dict)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\media_content_processor.py\", line 304, in from_dict\n    return cls(**data_copy)\n           ^^^^^^^^^^^^^^^^\nTypeError: DocumentContent.__init__() got an unexpected keyword argument 'is_binary'\n\n======================================================================\nFAIL: test_device_profiles (__main__.TestMediaContentProcessor.test_device_profiles)\nTest device profile functionality.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_media_content_processor.py\", line 223, in test_device_profiles\n    self.assertIn(category, profiles)\nAssertionError: <DeviceCategory.E_READER: 'e_reader'> not found in {<DeviceCategory.DESKTOP: 'desktop'>: <media_content_processor.DeviceProfile object at 0x0000026115A982C0>, <DeviceCategory.TABLET: 'tablet'>: <media_content_processor.DeviceProfile object at 0x0000026115A98860>, <DeviceCategory.MOBILE: 'mobile'>: <media_content_processor.DeviceProfile object at 0x000002611578D700>, <DeviceCategory.SCREEN_READER: 'screen_reader'>: <media_content_processor.DeviceProfile object at 0x000002611578F6E0>, <DeviceCategory.LOW_BANDWIDTH: 'low_bandwidth'>: <media_content_processor.DeviceProfile object at 0x0000026115A4F500>}\n\n----------------------------------------------------------------------\nRan 9 tests in 0.008s\n\nFAILED (failures=1, errors=2)\n",
      "duration": 0.8539650440216064
    },
    "test_multi_model_integration.py": {
      "success": false,
      "output": "",
      "duration": 0.10158824920654297
    },
    "test_multilingual_engine.py": {
      "success": false,
      "output": "Traceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_multilingual_engine.py\", line 17, in <module>\n    from principle_engine import PrincipleEngine, Principle\nImportError: cannot import name 'Principle' from 'principle_engine' (C:\\Users\\every\\Desktop\\Alex Familiar\\src\\principle_engine.py)\n",
      "duration": 0.1208653450012207
    },
    "test_orchestration_analytics.py": {
      "success": false,
      "output": "Traceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_orchestration_analytics.py\", line 20, in <module>\n    from principle_engine import PrincipleEngine, Principle\nImportError: cannot import name 'Principle' from 'principle_engine' (C:\\Users\\every\\Desktop\\Alex Familiar\\src\\principle_engine.py)\n",
      "duration": 0.38944339752197266
    },
    "test_principle_engine.py": {
      "success": false,
      "output": "2025-05-26 11:06:42,644 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\nE2025-05-26 11:06:42,646 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\nE2025-05-26 11:06:42,646 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\nE2025-05-26 11:06:42,647 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n.2025-05-26 11:06:42,647 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n.2025-05-26 11:06:42,647 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\nEEEEE\n======================================================================\nERROR: test_consistency_tracking (__main__.TestPrincipleEngine.test_consistency_tracking)\nTest that consistency scores are properly tracked.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_principle_engine.py\", line 94, in test_consistency_tracking\n    self.engine.evaluate_message(self.problematic_message)\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\principle_engine.py\", line 278, in evaluate_message\n    \"timestamp\": datetime.now(datetime.UTC).isoformat(),\n                              ^^^^^^^^^^^^\nAttributeError: type object 'datetime.datetime' has no attribute 'UTC'\n\n======================================================================\nERROR: test_evaluate_message (__main__.TestPrincipleEngine.test_evaluate_message)\nTest message evaluation against principles.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_principle_engine.py\", line 76, in test_evaluate_message\n    evaluation = self.engine.evaluate_message(self.good_message)\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\principle_engine.py\", line 278, in evaluate_message\n    \"timestamp\": datetime.now(datetime.UTC).isoformat(),\n                              ^^^^^^^^^^^^\nAttributeError: type object 'datetime.datetime' has no attribute 'UTC'\n\n======================================================================\nERROR: test_get_consistent_response (__main__.TestPrincipleEngine.test_get_consistent_response)\nTest that responses are adjusted to align with principles.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_principle_engine.py\", line 101, in test_get_consistent_response\n    consistent_response = self.engine.get_consistent_response(\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\principle_engine.py\", line 470, in get_consistent_response\n    self._apply_harmony_principles(message, response)\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\principle_engine.py\", line 503, in _apply_harmony_principles\n    response[\"result\"][\"timestamp\"] = datetime.now(datetime.UTC).isoformat()\n                                                   ^^^^^^^^^^^^\nAttributeError: type object 'datetime.datetime' has no attribute 'UTC'\n\n======================================================================\nERROR: test_reset_consistency_scores (__main__.TestPrincipleEngine.test_reset_consistency_scores)\nTest resetting consistency scores.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_principle_engine.py\", line 120, in test_reset_consistency_scores\n    self.engine.evaluate_message(self.problematic_message)\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\principle_engine.py\", line 278, in evaluate_message\n    \"timestamp\": datetime.now(datetime.UTC).isoformat(),\n                              ^^^^^^^^^^^^\nAttributeError: type object 'datetime.datetime' has no attribute 'UTC'\n\n======================================================================\nERROR: test_get_principle_descriptions (__main__.TestPrincipleGuidedBridgeBuilder.test_get_principle_descriptions)\nTest getting principle descriptions from the agent.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_principle_engine.py\", line 135, in setUp\n    self.agent = PrincipleGuidedBridgeBuilder()\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\principle_engine_example.py\", line 43, in __init__\n    super().__init__(agent_id, agent_card_path)\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\adaptive_bridge_builder.py\", line 40, in __init__\n    self.created_at = datetime.now(datetime.UTC).isoformat()\n                                   ^^^^^^^^^^^^\nAttributeError: type object 'datetime.datetime' has no attribute 'UTC'\n\n======================================================================\nERROR: test_initialization (__main__.TestPrincipleGuidedBridgeBuilder.test_initialization)\nTest that the agent initializes correctly.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_principle_engine.py\", line 135, in setUp\n    self.agent = PrincipleGuidedBridgeBuilder()\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\principle_engine_example.py\", line 43, in __init__\n    super().__init__(agent_id, agent_card_path)\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\adaptive_bridge_builder.py\", line 40, in __init__\n    self.created_at = datetime.now(datetime.UTC).isoformat()\n                                   ^^^^^^^^^^^^\nAttributeError: type object 'datetime.datetime' has no attribute 'UTC'\n\n======================================================================\nERROR: test_principle_consistency_report (__main__.TestPrincipleGuidedBridgeBuilder.test_principle_consistency_report)\nTest getting a principle consistency report.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_principle_engine.py\", line 135, in setUp\n    self.agent = PrincipleGuidedBridgeBuilder()\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\principle_engine_example.py\", line 43, in __init__\n    super().__init__(agent_id, agent_card_path)\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\adaptive_bridge_builder.py\", line 40, in __init__\n    self.created_at = datetime.now(datetime.UTC).isoformat()\n                                   ^^^^^^^^^^^^\nAttributeError: type object 'datetime.datetime' has no attribute 'UTC'\n\n======================================================================\nERROR: test_process_message (__main__.TestPrincipleGuidedBridgeBuilder.test_process_message)\nTest that messages are processed with principle evaluation.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_principle_engine.py\", line 135, in setUp\n    self.agent = PrincipleGuidedBridgeBuilder()\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\principle_engine_example.py\", line 43, in __init__\n    super().__init__(agent_id, agent_card_path)\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\adaptive_bridge_builder.py\", line 40, in __init__\n    self.created_at = datetime.now(datetime.UTC).isoformat()\n                                   ^^^^^^^^^^^^\nAttributeError: type object 'datetime.datetime' has no attribute 'UTC'\n\n----------------------------------------------------------------------\nRan 10 tests in 0.003s\n\nFAILED (errors=8)\n",
      "duration": 0.08382368087768555
    },
    "test_principle_engine_positive.py": {
      "success": false,
      "output": "2025-05-26 11:06:42,737 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 11:06:42,737 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\nE2025-05-26 11:06:42,738 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 11:06:42,738 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\nE2025-05-26 11:06:42,738 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 11:06:42,739 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\nE2025-05-26 11:06:42,739 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 11:06:42,739 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\nE2025-05-26 11:06:42,739 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 11:06:42,739 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\nE2025-05-26 11:06:42,739 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 11:06:42,740 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\nE2025-05-26 11:06:42,740 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 11:06:42,740 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\nE\n======================================================================\nERROR: test_direct_function_call (__main__.TestPrincipleEnginePositiveReinforcement.test_direct_function_call)\nTest calling the function directly.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_principle_engine_positive.py\", line 50, in setUp\n    self.learning_system = LearningSystem()\n                           ^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\learning_system.py\", line 270, in __init__\n    self.metrics = LearningMetrics()\n                   ^^^^^^^^^^^^^^^^^\n  File \"<string>\", line 18, in __init__\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\learning_system.py\", line 159, in <lambda>\n    last_updated: str = field(default_factory=lambda: datetime.now(datetime.UTC).isoformat())\n                                                                   ^^^^^^^^^^^^\nAttributeError: type object 'datetime.datetime' has no attribute 'UTC'\n\n======================================================================\nERROR: test_engine_extension_method (__main__.TestPrincipleEnginePositiveReinforcement.test_engine_extension_method)\nTest calling the function through the extended engine.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_principle_engine_positive.py\", line 50, in setUp\n    self.learning_system = LearningSystem()\n                           ^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\learning_system.py\", line 270, in __init__\n    self.metrics = LearningMetrics()\n                   ^^^^^^^^^^^^^^^^^\n  File \"<string>\", line 18, in __init__\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\learning_system.py\", line 159, in <lambda>\n    last_updated: str = field(default_factory=lambda: datetime.now(datetime.UTC).isoformat())\n                                                                   ^^^^^^^^^^^^\nAttributeError: type object 'datetime.datetime' has no attribute 'UTC'\n\n======================================================================\nERROR: test_log_contains_analysis_steps (__main__.TestPrincipleEnginePositiveReinforcement.test_log_contains_analysis_steps)\nTest that the result log contains the analysis steps.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_principle_engine_positive.py\", line 50, in setUp\n    self.learning_system = LearningSystem()\n                           ^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\learning_system.py\", line 270, in __init__\n    self.metrics = LearningMetrics()\n                   ^^^^^^^^^^^^^^^^^\n  File \"<string>\", line 18, in __init__\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\learning_system.py\", line 159, in <lambda>\n    last_updated: str = field(default_factory=lambda: datetime.now(datetime.UTC).isoformat())\n                                                                   ^^^^^^^^^^^^\nAttributeError: type object 'datetime.datetime' has no attribute 'UTC'\n\n======================================================================\nERROR: test_negative_interaction (__main__.TestPrincipleEnginePositiveReinforcement.test_negative_interaction)\nTest analysis of a negative interaction.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_principle_engine_positive.py\", line 50, in setUp\n    self.learning_system = LearningSystem()\n                           ^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\learning_system.py\", line 270, in __init__\n    self.metrics = LearningMetrics()\n                   ^^^^^^^^^^^^^^^^^\n  File \"<string>\", line 18, in __init__\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\learning_system.py\", line 159, in <lambda>\n    last_updated: str = field(default_factory=lambda: datetime.now(datetime.UTC).isoformat())\n                                                                   ^^^^^^^^^^^^\nAttributeError: type object 'datetime.datetime' has no attribute 'UTC'\n\n======================================================================\nERROR: test_neutral_interaction (__main__.TestPrincipleEnginePositiveReinforcement.test_neutral_interaction)\nTest analysis of a neutral interaction.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_principle_engine_positive.py\", line 50, in setUp\n    self.learning_system = LearningSystem()\n                           ^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\learning_system.py\", line 270, in __init__\n    self.metrics = LearningMetrics()\n                   ^^^^^^^^^^^^^^^^^\n  File \"<string>\", line 18, in __init__\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\learning_system.py\", line 159, in <lambda>\n    last_updated: str = field(default_factory=lambda: datetime.now(datetime.UTC).isoformat())\n                                                                   ^^^^^^^^^^^^\nAttributeError: type object 'datetime.datetime' has no attribute 'UTC'\n\n======================================================================\nERROR: test_positive_interaction (__main__.TestPrincipleEnginePositiveReinforcement.test_positive_interaction)\nTest analysis of a positive interaction.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_principle_engine_positive.py\", line 50, in setUp\n    self.learning_system = LearningSystem()\n                           ^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\learning_system.py\", line 270, in __init__\n    self.metrics = LearningMetrics()\n                   ^^^^^^^^^^^^^^^^^\n  File \"<string>\", line 18, in __init__\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\learning_system.py\", line 159, in <lambda>\n    last_updated: str = field(default_factory=lambda: datetime.now(datetime.UTC).isoformat())\n                                                                   ^^^^^^^^^^^^\nAttributeError: type object 'datetime.datetime' has no attribute 'UTC'\n\n======================================================================\nERROR: test_with_empty_message (__main__.TestPrincipleEnginePositiveReinforcement.test_with_empty_message)\nTest handling of an empty message.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_principle_engine_positive.py\", line 50, in setUp\n    self.learning_system = LearningSystem()\n                           ^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\learning_system.py\", line 270, in __init__\n    self.metrics = LearningMetrics()\n                   ^^^^^^^^^^^^^^^^^\n  File \"<string>\", line 18, in __init__\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\learning_system.py\", line 159, in <lambda>\n    last_updated: str = field(default_factory=lambda: datetime.now(datetime.UTC).isoformat())\n                                                                   ^^^^^^^^^^^^\nAttributeError: type object 'datetime.datetime' has no attribute 'UTC'\n\n----------------------------------------------------------------------\nRan 7 tests in 0.004s\n\nFAILED (errors=7)\n",
      "duration": 0.09292268753051758
    },
    "test_principles_integration.py": {
      "success": false,
      "output": "",
      "duration": 0.05551409721374512
    },
    "test_project_orchestrator.py": {
      "success": false,
      "output": "2025-05-26 11:06:43,166 - CollaborativeTaskHandler - INFO - TaskCoordinator initialized for agent test-orchestrator\nE2025-05-26 11:06:43,167 - CollaborativeTaskHandler - INFO - TaskCoordinator initialized for agent test-orchestrator\nE2025-05-26 11:06:43,167 - CollaborativeTaskHandler - INFO - TaskCoordinator initialized for agent test-orchestrator\nE2025-05-26 11:06:43,167 - CollaborativeTaskHandler - INFO - TaskCoordinator initialized for agent test-orchestrator\nE2025-05-26 11:06:43,168 - CollaborativeTaskHandler - INFO - TaskCoordinator initialized for agent test-orchestrator\nE2025-05-26 11:06:43,168 - CollaborativeTaskHandler - INFO - TaskCoordinator initialized for agent test-orchestrator\nE\n======================================================================\nERROR: test_add_milestone (__main__.TestProjectOrchestrator.test_add_milestone)\nTest adding a milestone to a project.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_project_orchestrator.py\", line 39, in setUp\n    self.orchestrator_engine = OrchestratorEngine(\n                               ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\orchestrator_engine.py\", line 621, in __init__\n    self.last_status_update = datetime.now(datetime.UTC)\n                                           ^^^^^^^^^^^^\nAttributeError: type object 'datetime.datetime' has no attribute 'UTC'\n\n======================================================================\nERROR: test_create_project (__main__.TestProjectOrchestrator.test_create_project)\nTest creating a project.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_project_orchestrator.py\", line 39, in setUp\n    self.orchestrator_engine = OrchestratorEngine(\n                               ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\orchestrator_engine.py\", line 621, in __init__\n    self.last_status_update = datetime.now(datetime.UTC)\n                                           ^^^^^^^^^^^^\nAttributeError: type object 'datetime.datetime' has no attribute 'UTC'\n\n======================================================================\nERROR: test_create_task (__main__.TestProjectOrchestrator.test_create_task)\nTest creating a task in a milestone.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_project_orchestrator.py\", line 39, in setUp\n    self.orchestrator_engine = OrchestratorEngine(\n                               ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\orchestrator_engine.py\", line 621, in __init__\n    self.last_status_update = datetime.now(datetime.UTC)\n                                           ^^^^^^^^^^^^\nAttributeError: type object 'datetime.datetime' has no attribute 'UTC'\n\n======================================================================\nERROR: test_resource_management (__main__.TestProjectOrchestrator.test_resource_management)\nTest resource management functionality.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_project_orchestrator.py\", line 39, in setUp\n    self.orchestrator_engine = OrchestratorEngine(\n                               ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\orchestrator_engine.py\", line 621, in __init__\n    self.last_status_update = datetime.now(datetime.UTC)\n                                           ^^^^^^^^^^^^\nAttributeError: type object 'datetime.datetime' has no attribute 'UTC'\n\n======================================================================\nERROR: test_status_update (__main__.TestProjectOrchestrator.test_status_update)\nTest creating status updates.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_project_orchestrator.py\", line 39, in setUp\n    self.orchestrator_engine = OrchestratorEngine(\n                               ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\orchestrator_engine.py\", line 621, in __init__\n    self.last_status_update = datetime.now(datetime.UTC)\n                                           ^^^^^^^^^^^^\nAttributeError: type object 'datetime.datetime' has no attribute 'UTC'\n\n======================================================================\nERROR: test_track_milestone_progress (__main__.TestProjectOrchestrator.test_track_milestone_progress)\nTest tracking milestone progress.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_project_orchestrator.py\", line 39, in setUp\n    self.orchestrator_engine = OrchestratorEngine(\n                               ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\orchestrator_engine.py\", line 621, in __init__\n    self.last_status_update = datetime.now(datetime.UTC)\n                                           ^^^^^^^^^^^^\nAttributeError: type object 'datetime.datetime' has no attribute 'UTC'\n\n----------------------------------------------------------------------\nRan 6 tests in 0.002s\n\nFAILED (errors=6)\n",
      "duration": 0.37990713119506836
    },
    "test_protocol_adapter.py": {
      "success": true,
      "output": "============================= test session starts =============================\nplatform win32 -- Python 3.12.9, pytest-8.3.5, pluggy-1.5.0 -- C:\\Users\\every\\miniconda3\\python.exe\ncachedir: .pytest_cache\nrootdir: C:\\Users\\every\\Desktop\\Alex Familiar\\src\nplugins: anyio-4.9.0, langsmith-0.3.42\ncollecting ... collected 25 items\n\ntest_protocol_adapter.py::TestProtocolNameAdapter::test_connect_success SKIPPED [  4%]\ntest_protocol_adapter.py::TestProtocolNameAdapter::test_connect_failure SKIPPED [  8%]\ntest_protocol_adapter.py::TestProtocolNameAdapter::test_connect_retry SKIPPED [ 12%]\ntest_protocol_adapter.py::TestProtocolNameAdapter::test_disconnect_success SKIPPED [ 16%]\ntest_protocol_adapter.py::TestProtocolNameAdapter::test_translate_to_internal PASSED [ 20%]\ntest_protocol_adapter.py::TestProtocolNameAdapter::test_translate_from_internal PASSED [ 24%]\ntest_protocol_adapter.py::TestProtocolNameAdapter::test_bidirectional_translation PASSED [ 28%]\ntest_protocol_adapter.py::TestProtocolNameAdapter::test_authenticate_success SKIPPED [ 32%]\ntest_protocol_adapter.py::TestProtocolNameAdapter::test_authenticate_failure SKIPPED [ 36%]\ntest_protocol_adapter.py::TestProtocolNameAdapter::test_no_auth_required SKIPPED [ 40%]\ntest_protocol_adapter.py::TestProtocolNameAdapter::test_send_message_success SKIPPED [ 44%]\ntest_protocol_adapter.py::TestProtocolNameAdapter::test_send_message_not_connected SKIPPED [ 48%]\ntest_protocol_adapter.py::TestProtocolNameAdapter::test_send_message_with_retry SKIPPED [ 52%]\ntest_protocol_adapter.py::TestProtocolNameAdapter::test_receive_message_success SKIPPED [ 56%]\ntest_protocol_adapter.py::TestProtocolNameAdapter::test_receive_message_timeout SKIPPED [ 60%]\ntest_protocol_adapter.py::TestProtocolNameAdapter::test_get_capabilities SKIPPED [ 64%]\ntest_protocol_adapter.py::TestProtocolNameAdapter::test_reconnect_on_connection_error SKIPPED [ 68%]\ntest_protocol_adapter.py::TestProtocolNameAdapter::test_should_reconnect PASSED [ 72%]\ntest_protocol_adapter.py::TestProtocolNameAdapter::test_validate_protocol_message PASSED [ 76%]\ntest_protocol_adapter.py::TestProtocolNameAdapter::test_validate_internal_message PASSED [ 80%]\ntest_protocol_adapter.py::TestProtocolNameAdapter::test_metrics_tracking SKIPPED [ 84%]\ntest_protocol_adapter.py::TestProtocolNameAdapter::test_heartbeat SKIPPED [ 88%]\ntest_protocol_adapter.py::TestProtocolNameAdapter::test_receive_loop_error_handling SKIPPED [ 92%]\ntest_protocol_adapter.py::TestProtocolNameAdapter::test_protocol_specific_fields_preserved PASSED [ 96%]\ntest_protocol_adapter.py::TestProtocolNameAdapter::test_concurrent_operations SKIPPED [100%]\n\n============================== warnings summary ===============================\ntest_protocol_adapter.py:115\n  C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_protocol_adapter.py:115: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.asyncio\n\ntest_protocol_adapter.py:128\n  C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_protocol_adapter.py:128: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.asyncio\n\ntest_protocol_adapter.py:140\n  C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_protocol_adapter.py:140: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.asyncio\n\ntest_protocol_adapter.py:161\n  C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_protocol_adapter.py:161: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.asyncio\n\ntest_protocol_adapter.py:224\n  C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_protocol_adapter.py:224: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.asyncio\n\ntest_protocol_adapter.py:235\n  C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_protocol_adapter.py:235: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.asyncio\n\ntest_protocol_adapter.py:258\n  C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_protocol_adapter.py:258: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.asyncio\n\ntest_protocol_adapter.py:270\n  C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_protocol_adapter.py:270: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.asyncio\n\ntest_protocol_adapter.py:284\n  C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_protocol_adapter.py:284: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.asyncio\n\ntest_protocol_adapter.py:293\n  C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_protocol_adapter.py:293: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.asyncio\n\ntest_protocol_adapter.py:314\n  C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_protocol_adapter.py:314: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.asyncio\n\ntest_protocol_adapter.py:331\n  C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_protocol_adapter.py:331: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.asyncio\n\ntest_protocol_adapter.py:344\n  C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_protocol_adapter.py:344: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.asyncio\n\ntest_protocol_adapter.py:364\n  C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_protocol_adapter.py:364: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.asyncio\n\ntest_protocol_adapter.py:471\n  C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_protocol_adapter.py:471: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.asyncio\n\ntest_protocol_adapter.py:489\n  C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_protocol_adapter.py:489: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.asyncio\n\ntest_protocol_adapter.py:503\n  C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_protocol_adapter.py:503: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.asyncio\n\ntest_protocol_adapter.py:543\n  C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_protocol_adapter.py:543: PytestUnknownMarkWarning: Unknown pytest.mark.asyncio - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.asyncio\n\ntest_protocol_adapter.py: 18 warnings\n  C:\\Users\\every\\miniconda3\\Lib\\site-packages\\_pytest\\python.py:148: PytestUnhandledCoroutineWarning: async def functions are not natively supported and have been skipped.\n  You need to install a suitable plugin for your async framework, for example:\n    - anyio\n    - pytest-asyncio\n    - pytest-tornasync\n    - pytest-trio\n    - pytest-twisted\n    warnings.warn(PytestUnhandledCoroutineWarning(msg.format(nodeid)))\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n================= 7 passed, 18 skipped, 36 warnings in 0.08s ==================\n",
      "duration": 1.329699993133545
    },
    "test_runner.py": {
      "success": false,
      "output": "Traceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_runner.py\", line 773, in <module>\n    sys.exit(main())\n             ^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_runner.py\", line 748, in main\n    framework.add_suite(create_multi_turn_test_suite())\n                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_runner.py\", line 193, in create_multi_turn_test_suite\n    test_case = create_multi_turn_test_case(scenario)\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_runner.py\", line 392, in create_multi_turn_test_case\n    TestMetric(\n    ^^^^^^^^^^\nNameError: name 'TestMetric' is not defined\n",
      "duration": 0.3789083957672119
    },
    "test_scenarios.py": {
      "success": false,
      "output": "2025-05-26 11:06:44,964 - TestFramework - INFO - Running suite: Adaptive Bridge Builder Core Tests\n2025-05-26 11:06:44,964 - TestFramework - INFO - Running test suite: Adaptive Bridge Builder Core Tests\n2025-05-26 11:06:44,964 - TestFramework - INFO - Running test case: Communication Style Adaptation Test [3095d49c-0e68-4ff7-b1aa-d205af1aab02]\n2025-05-26 11:06:44,964 - CommunicationStyleAnalyzer - INFO - CommunicationStyleAnalyzer initialized\n2025-05-26 11:06:44,964 - TestFramework - ERROR - Error in test case Communication Style Adaptation Test: 'CommunicationStyleAnalyzer' object has no attribute 'analyze_message'\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_framework.py\", line 128, in run\n    result_data = self.execute(test_data)\n                  ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_scenarios.py\", line 97, in execute\n    detected_style = analyzer.analyze_message(message)\n                     ^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'CommunicationStyleAnalyzer' object has no attribute 'analyze_message'\n2025-05-26 11:06:44,968 - TestFramework - INFO - Test case completed: Communication Style Adaptation Test [3095d49c-0e68-4ff7-b1aa-d205af1aab02] - ERROR in 3.58ms\n2025-05-26 11:06:44,968 - TestFramework - INFO - Running test case: Conflict Resolution Test [072f6e1d-baec-40e2-bee4-0064096f7d5b]\n2025-05-26 11:06:44,968 - TestFramework - ERROR - Error in test case Conflict Resolution Test: PrincipleEngine.__init__() got an unexpected keyword argument 'principles'\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_framework.py\", line 124, in run\n    test_data = self.setup()\n                ^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_scenarios.py\", line 154, in setup\n    principle_engine = PrincipleEngine(\n                       ^^^^^^^^^^^^^^^^\nTypeError: PrincipleEngine.__init__() got an unexpected keyword argument 'principles'\n2025-05-26 11:06:44,968 - TestFramework - INFO - Test case completed: Conflict Resolution Test [072f6e1d-baec-40e2-bee4-0064096f7d5b] - ERROR in 0.00ms\n2025-05-26 11:06:44,968 - TestFramework - INFO - Suite Adaptive Bridge Builder Core Tests completed: 0 passed, 0 failed, 2 errors, 0 skipped\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_scenarios.py\", line 277, in <module>\n    main()\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_scenarios.py\", line 272, in main\n    report_path = framework.generate_report(results)\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_framework.py\", line 354, in generate_report\n    json.dump(report, f, indent=2)\n  File \"C:\\Users\\every\\miniconda3\\Lib\\json\\__init__.py\", line 179, in dump\n    for chunk in iterable:\n                 ^^^^^^^^\n  File \"C:\\Users\\every\\miniconda3\\Lib\\json\\encoder.py\", line 432, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"C:\\Users\\every\\miniconda3\\Lib\\json\\encoder.py\", line 406, in _iterencode_dict\n    yield from chunks\n  File \"C:\\Users\\every\\miniconda3\\Lib\\json\\encoder.py\", line 406, in _iterencode_dict\n    yield from chunks\n  File \"C:\\Users\\every\\miniconda3\\Lib\\json\\encoder.py\", line 406, in _iterencode_dict\n    yield from chunks\n  File \"C:\\Users\\every\\miniconda3\\Lib\\json\\encoder.py\", line 326, in _iterencode_list\n    yield from chunks\n  File \"C:\\Users\\every\\miniconda3\\Lib\\json\\encoder.py\", line 406, in _iterencode_dict\n    yield from chunks\n  File \"C:\\Users\\every\\miniconda3\\Lib\\json\\encoder.py\", line 406, in _iterencode_dict\n    yield from chunks\n  File \"C:\\Users\\every\\miniconda3\\Lib\\json\\encoder.py\", line 439, in _iterencode\n    o = _default(o)\n        ^^^^^^^^^^^\n  File \"C:\\Users\\every\\miniconda3\\Lib\\json\\encoder.py\", line 180, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type CommunicationStyleAnalyzer is not JSON serializable\n",
      "duration": 0.08553409576416016
    },
    "test_universal_agent_connector.py": {
      "success": false,
      "output": "Traceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_universal_agent_connector.py\", line 17, in <module>\n    from universal_agent_connector import (\nImportError: cannot import name 'UniversalAgentConnector' from 'universal_agent_connector' (C:\\Users\\every\\Desktop\\Alex Familiar\\src\\universal_agent_connector.py)\n",
      "duration": 0.48213768005371094
    }
  },
  "summary": {
    "total": 28,
    "passed": 6,
    "failed": 22
  }
}