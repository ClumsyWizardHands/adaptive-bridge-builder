{
  "start_time": "2025-05-26T11:11:42.375405",
  "end_time": "2025-05-26T11:12:09.256272",
  "total_duration": 26.880867,
  "test_results": {
    "test_a2a_task_handler.py": {
      "success": false,
      "output": "2025-05-26 11:11:47,789 - A2ATaskHandler - INFO - A2ATaskHandler initialized for agent test-agent-001\n2025-05-26 11:11:47,791 - A2ATaskHandler - INFO - Task test-msg-001 from test-agent-002 completed successfully. Intent: query, Content type: text\n.2025-05-26 11:11:47,791 - A2ATaskHandler - INFO - A2ATaskHandler initialized for agent test-agent-001\n2025-05-26 11:11:47,792 - A2ATaskHandler - INFO - Task test-msg-001 from test-agent-002 completed successfully. Intent: query, Content type: text\n2025-05-26 11:11:47,792 - A2ATaskHandler - INFO - Task test-msg-003 from test-agent-002 completed successfully. Intent: request, Content type: text\n.2025-05-26 11:11:47,794 - A2ATaskHandler - INFO - A2ATaskHandler initialized for agent test-agent-001\nF2025-05-26 11:11:47,795 - A2ATaskHandler - INFO - A2ATaskHandler initialized for agent test-agent-001\n2025-05-26 11:11:47,797 - A2ATaskHandler - ERROR - Error processing task test-msg-error from test-agent-002: Test error\n.2025-05-26 11:11:47,797 - A2ATaskHandler - INFO - A2ATaskHandler initialized for agent test-agent-001\n.2025-05-26 11:11:47,798 - A2ATaskHandler - INFO - A2ATaskHandler initialized for agent test-agent-001\n2025-05-26 11:11:47,799 - A2ATaskHandler - INFO - Task test-msg-001 from test-agent-002 completed successfully. Intent: query, Content type: text\n.2025-05-26 11:11:47,800 - A2ATaskHandler - INFO - A2ATaskHandler initialized for agent test-agent-001\n.2025-05-26 11:11:47,800 - A2ATaskHandler - INFO - A2ATaskHandler initialized for agent test-agent-001\n2025-05-26 11:11:47,801 - A2ATaskHandler - INFO - Task test-msg-001 from test-agent-002 completed successfully. Intent: query, Content type: text\n.\n======================================================================\nFAIL: test_determine_intent (__main__.TestA2ATaskHandler.test_determine_intent)\nTest intent determination from content.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_a2a_task_handler.py\", line 132, in test_determine_intent\n    self.assertEqual(\nAssertionError: 'request' != 'instruct'\n- request\n+ instruct\n\n\n----------------------------------------------------------------------\nRan 8 tests in 0.015s\n\nFAILED (failures=1)\n",
      "duration": 0.14974236488342285
    },
    "test_ai_framework_detector.py": {
      "success": false,
      "output": "Traceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_ai_framework_detector.py\", line 366, in <module>\n    print(f\"\\u26a0 {failed} tests failed. Please review the results above.\")\n  File \"C:\\Users\\every\\miniconda3\\Lib\\encodings\\cp1252.py\", line 19, in encode\n    return codecs.charmap_encode(input,self.errors,encoding_table)[0]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nUnicodeEncodeError: 'charmap' codec can't encode character '\\u26a0' in position 0: character maps to <undefined>\n",
      "duration": 0.06644892692565918
    },
    "test_anthropic_mistral.py": {
      "success": true,
      "output": "",
      "duration": 0.25850629806518555
    },
    "test_api_gateway_system.py": {
      "success": true,
      "output": "",
      "duration": 0.13090252876281738
    },
    "test_api_gateway_system_calendar.py": {
      "success": false,
      "output": "Traceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_api_gateway_system_calendar.py\", line 16, in <module>\n    from api_gateway_system_calendar import (\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\api_gateway_system_calendar.py\", line 41, in <module>\n    from empire_framework.a2a.component_task_handler import Task, ComponentTaskTypes, TaskStatus\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\empire_framework\\a2a\\component_task_handler.py\", line 27, in <module>\n    from empire_framework.registry.component_registry import ComponentRegistry\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\empire_framework\\registry\\__init__.py\", line 8, in <module>\n    from src.empire_framework.registry.component_registry import (\nModuleNotFoundError: No module named 'src.empire_framework.registry'\n",
      "duration": 0.14516782760620117
    },
    "test_emoji_emotional_analyzer.py": {
      "success": true,
      "output": "",
      "duration": 0.08113956451416016
    },
    "test_emoji_emotional_analyzer_enhanced.py": {
      "success": false,
      "output": "F.......F........FF.F.F..FF.......\n======================================================================\nFAIL: test_conflicting_emotions (__main__.TestEdgeCases.test_conflicting_emotions)\nTest handling input with strongly conflicting emotions.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emoji_emotional_analyzer_enhanced.py\", line 619, in test_conflicting_emotions\n    self.assertIsNotNone(emotion.secondary_emotion)\nAssertionError: unexpectedly None\n\n======================================================================\nFAIL: test_map_to_emotional_states (__main__.TestEmojiEmotionalAnalyzer.test_map_to_emotional_states)\nTest the map_to_emotional_states method.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emoji_emotional_analyzer_enhanced.py\", line 531, in test_map_to_emotional_states\n    self.assertIn(EmotionCategory.JOY, emotion_map)\nAssertionError: <EmotionCategory.JOY: 1> not found in {<EmotionCategory.NEUTRAL: 9>: 1.0}\n\n======================================================================\nFAIL: test_calculate_intensity (__main__.TestEmotionDetectionEngine.test_calculate_intensity)\nTest calculation of emotional intensity from emojis.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emoji_emotional_analyzer_enhanced.py\", line 117, in test_calculate_intensity\n    self.assertIn(intensity, [EmotionIntensity.HIGH, EmotionIntensity.VERY_HIGH])\nAssertionError: <EmotionIntensity.MEDIUM: 3> not found in [<EmotionIntensity.HIGH: 4>, <EmotionIntensity.VERY_HIGH: 5>]\n\n======================================================================\nFAIL: test_detect_complex_emotion_patterns (__main__.TestEmotionDetectionEngine.test_detect_complex_emotion_patterns)\nTest detection of complex emotion patterns.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emoji_emotional_analyzer_enhanced.py\", line 105, in test_detect_complex_emotion_patterns\n    self.assertEqual(state.primary_emotion, emotion)\nAssertionError: <EmotionCategory.NEUTRAL: 9> != <EmotionCategory.SADNESS: 2>\n\n======================================================================\nFAIL: test_detect_emotion_with_modifiers (__main__.TestEmotionDetectionEngine.test_detect_emotion_with_modifiers)\nTest emotion detection with intensity modifiers.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emoji_emotional_analyzer_enhanced.py\", line 91, in test_detect_emotion_with_modifiers\n    self.assertEqual(base_state.primary_emotion, intensified_state.primary_emotion)\nAssertionError: <EmotionCategory.JOY: 1> != <EmotionCategory.NEUTRAL: 9>\n\n======================================================================\nFAIL: test_extract_emojis (__main__.TestEmotionDetectionEngine.test_extract_emojis)\nTest extracting emojis from mixed text.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emoji_emotional_analyzer_enhanced.py\", line 44, in test_extract_emojis\n    self.assertEqual(len(emojis), 3)\nAssertionError: 1 != 3\n\n======================================================================\nFAIL: test_map_to_emotional_states_complex (__main__.TestEmotionMappingSystem.test_map_to_emotional_states_complex)\nTest mapping complex emoji sequences to emotional states.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emoji_emotional_analyzer_enhanced.py\", line 169, in test_map_to_emotional_states_complex\n    self.assertIn(EmotionCategory.JOY, emotion_map)\nAssertionError: <EmotionCategory.JOY: 1> not found in {<EmotionCategory.NEUTRAL: 9>: 1.0}\n\n======================================================================\nFAIL: test_map_to_emotional_states_simple (__main__.TestEmotionMappingSystem.test_map_to_emotional_states_simple)\nTest mapping a simple emoji to multiple emotional states.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emoji_emotional_analyzer_enhanced.py\", line 159, in test_map_to_emotional_states_simple\n    self.assertGreater(emotion_map[EmotionCategory.JOY], 0.5)\nAssertionError: 0.4347826086956522 not greater than 0.5\n\n----------------------------------------------------------------------\nRan 34 tests in 0.004s\n\nFAILED (failures=8)\n",
      "duration": 0.1285562515258789
    },
    "test_emoji_sequence_optimizer.py": {
      "success": false,
      "output": "EEEEE.EEEEE\n======================================================================\nERROR: test_basic_optimization (__main__.TestEmojiSequenceOptimizer.test_basic_optimization)\nTest basic sequence optimization with default context.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emoji_sequence_optimizer.py\", line 38, in test_basic_optimization\n    result = self.optimizer.optimize_sequence(self.technical_sequence)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_sequence_optimizer.py\", line 262, in optimize_sequence\n    result = self._optimize_sequence(emojis, context)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_sequence_optimizer.py\", line 456, in _optimize_sequence\n    scores = self._calculate_scores(optimized_emojis, context)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_sequence_optimizer.py\", line 981, in _calculate_scores\n    conc_score = self._calculate_conciseness_score(emojis, context)\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_sequence_optimizer.py\", line 1110, in _calculate_conciseness_score\n    concepts = self.knowledge_base.find_concept_for_emoji(emoji)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'EmojiKnowledgeBase' object has no attribute 'find_concept_for_emoji'\n\n======================================================================\nERROR: test_batch_optimization (__main__.TestEmojiSequenceOptimizer.test_batch_optimization)\nTest optimizing multiple sequences in batch.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emoji_sequence_optimizer.py\", line 291, in test_batch_optimization\n    results = self.optimizer.optimize_sequence_batch(sequences, context)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_sequence_optimizer.py\", line 284, in optimize_sequence_batch\n    results.append(self.optimize_sequence(sequence, context))\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_sequence_optimizer.py\", line 262, in optimize_sequence\n    result = self._optimize_sequence(emojis, context)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_sequence_optimizer.py\", line 456, in _optimize_sequence\n    scores = self._calculate_scores(optimized_emojis, context)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_sequence_optimizer.py\", line 981, in _calculate_scores\n    conc_score = self._calculate_conciseness_score(emojis, context)\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_sequence_optimizer.py\", line 1110, in _calculate_conciseness_score\n    concepts = self.knowledge_base.find_concept_for_emoji(emoji)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'EmojiKnowledgeBase' object has no attribute 'find_concept_for_emoji'\n\n======================================================================\nERROR: test_cultural_context_adaptation (__main__.TestEmojiSequenceOptimizer.test_cultural_context_adaptation)\nTest cultural context adaptation.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emoji_sequence_optimizer.py\", line 118, in test_cultural_context_adaptation\n    global_result = self.optimizer.optimize_sequence(self.social_sequence, global_context)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_sequence_optimizer.py\", line 262, in optimize_sequence\n    result = self._optimize_sequence(emojis, context)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_sequence_optimizer.py\", line 456, in _optimize_sequence\n    scores = self._calculate_scores(optimized_emojis, context)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_sequence_optimizer.py\", line 981, in _calculate_scores\n    conc_score = self._calculate_conciseness_score(emojis, context)\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_sequence_optimizer.py\", line 1110, in _calculate_conciseness_score\n    concepts = self.knowledge_base.find_concept_for_emoji(emoji)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'EmojiKnowledgeBase' object has no attribute 'find_concept_for_emoji'\n\n======================================================================\nERROR: test_custom_optimization_profile (__main__.TestEmojiSequenceOptimizer.test_custom_optimization_profile)\nTest creating and using custom optimization profiles.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emoji_sequence_optimizer.py\", line 200, in test_custom_optimization_profile\n    custom_result = self.optimizer.optimize_sequence(self.complex_sequence, custom_context)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_sequence_optimizer.py\", line 262, in optimize_sequence\n    result = self._optimize_sequence(emojis, context)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_sequence_optimizer.py\", line 456, in _optimize_sequence\n    scores = self._calculate_scores(optimized_emojis, context)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_sequence_optimizer.py\", line 981, in _calculate_scores\n    conc_score = self._calculate_conciseness_score(emojis, context)\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_sequence_optimizer.py\", line 1110, in _calculate_conciseness_score\n    concepts = self.knowledge_base.find_concept_for_emoji(emoji)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'EmojiKnowledgeBase' object has no attribute 'find_concept_for_emoji'\n\n======================================================================\nERROR: test_domain_specific_optimization (__main__.TestEmojiSequenceOptimizer.test_domain_specific_optimization)\nTest domain-specific optimization.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emoji_sequence_optimizer.py\", line 90, in test_domain_specific_optimization\n    tech_result = self.optimizer.optimize_sequence(self.complex_sequence, tech_context)\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_sequence_optimizer.py\", line 262, in optimize_sequence\n    result = self._optimize_sequence(emojis, context)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_sequence_optimizer.py\", line 456, in _optimize_sequence\n    scores = self._calculate_scores(optimized_emojis, context)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_sequence_optimizer.py\", line 981, in _calculate_scores\n    conc_score = self._calculate_conciseness_score(emojis, context)\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_sequence_optimizer.py\", line 1110, in _calculate_conciseness_score\n    concepts = self.knowledge_base.find_concept_for_emoji(emoji)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'EmojiKnowledgeBase' object has no attribute 'find_concept_for_emoji'\n\n======================================================================\nERROR: test_grouping_strategies (__main__.TestEmojiSequenceOptimizer.test_grouping_strategies)\nTest different grouping strategies.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emoji_sequence_optimizer.py\", line 146, in test_grouping_strategies\n    semantic_result = self.optimizer.optimize_sequence(self.complex_sequence, semantic_context)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_sequence_optimizer.py\", line 262, in optimize_sequence\n    result = self._optimize_sequence(emojis, context)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_sequence_optimizer.py\", line 456, in _optimize_sequence\n    scores = self._calculate_scores(optimized_emojis, context)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_sequence_optimizer.py\", line 981, in _calculate_scores\n    conc_score = self._calculate_conciseness_score(emojis, context)\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_sequence_optimizer.py\", line 1110, in _calculate_conciseness_score\n    concepts = self.knowledge_base.find_concept_for_emoji(emoji)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'EmojiKnowledgeBase' object has no attribute 'find_concept_for_emoji'\n\n======================================================================\nERROR: test_optimization_profiles (__main__.TestEmojiSequenceOptimizer.test_optimization_profiles)\nTest different optimization profiles.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emoji_sequence_optimizer.py\", line 55, in test_optimization_profiles\n    precise_result = self.optimizer.optimize_sequence(self.complex_sequence, precise_context)\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_sequence_optimizer.py\", line 262, in optimize_sequence\n    result = self._optimize_sequence(emojis, context)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_sequence_optimizer.py\", line 456, in _optimize_sequence\n    scores = self._calculate_scores(optimized_emojis, context)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_sequence_optimizer.py\", line 981, in _calculate_scores\n    conc_score = self._calculate_conciseness_score(emojis, context)\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_sequence_optimizer.py\", line 1110, in _calculate_conciseness_score\n    concepts = self.knowledge_base.find_concept_for_emoji(emoji)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'EmojiKnowledgeBase' object has no attribute 'find_concept_for_emoji'\n\n======================================================================\nERROR: test_optimization_with_constraints (__main__.TestEmojiSequenceOptimizer.test_optimization_with_constraints)\nTest optimization with various constraints.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emoji_sequence_optimizer.py\", line 237, in test_optimization_with_constraints\n    length_result = self.optimizer.optimize_sequence(self.complex_sequence, length_context)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_sequence_optimizer.py\", line 262, in optimize_sequence\n    result = self._optimize_sequence(emojis, context)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_sequence_optimizer.py\", line 456, in _optimize_sequence\n    scores = self._calculate_scores(optimized_emojis, context)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_sequence_optimizer.py\", line 981, in _calculate_scores\n    conc_score = self._calculate_conciseness_score(emojis, context)\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_sequence_optimizer.py\", line 1110, in _calculate_conciseness_score\n    concepts = self.knowledge_base.find_concept_for_emoji(emoji)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'EmojiKnowledgeBase' object has no attribute 'find_concept_for_emoji'\n\n======================================================================\nERROR: test_sequence_analysis (__main__.TestEmojiSequenceOptimizer.test_sequence_analysis)\nTest analyzing emoji sequences without optimizing.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emoji_sequence_optimizer.py\", line 209, in test_sequence_analysis\n    analysis = self.optimizer.analyze_sequence(self.technical_sequence)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_sequence_optimizer.py\", line 369, in analyze_sequence\n    \"ambiguity\": self._calculate_ambiguity_score(emojis, context),\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'EmojiSequenceOptimizer' object has no attribute '_calculate_ambiguity_score'. Did you mean: '_calculate_familiarity_score'?\n\n======================================================================\nERROR: test_weight_calculations (__main__.TestEmojiSequenceOptimizer.test_weight_calculations)\nTest calculations of various weighted scores.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emoji_sequence_optimizer.py\", line 330, in test_weight_calculations\n    result = self.optimizer.optimize_sequence(self.technical_sequence, context)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_sequence_optimizer.py\", line 262, in optimize_sequence\n    result = self._optimize_sequence(emojis, context)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_sequence_optimizer.py\", line 456, in _optimize_sequence\n    scores = self._calculate_scores(optimized_emojis, context)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_sequence_optimizer.py\", line 981, in _calculate_scores\n    conc_score = self._calculate_conciseness_score(emojis, context)\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_sequence_optimizer.py\", line 1110, in _calculate_conciseness_score\n    concepts = self.knowledge_base.find_concept_for_emoji(emoji)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'EmojiKnowledgeBase' object has no attribute 'find_concept_for_emoji'\n\n----------------------------------------------------------------------\nRan 11 tests in 0.014s\n\nFAILED (errors=10)\n",
      "duration": 0.09933924674987793
    },
    "test_emoji_translation_engine.py": {
      "success": true,
      "output": "",
      "duration": 0.08602285385131836
    },
    "test_emotional_intelligence.py": {
      "success": false,
      "output": "2025-05-26 11:11:48,900 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 11:11:48,900 - CommunicationStyleAnalyzer - INFO - CommunicationStyleAnalyzer initialized\n2025-05-26 11:11:48,900 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\n.2025-05-26 11:11:48,907 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 11:11:48,908 - CommunicationStyleAnalyzer - INFO - CommunicationStyleAnalyzer initialized\n2025-05-26 11:11:48,908 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\n.2025-05-26 11:11:48,911 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 11:11:48,911 - CommunicationStyleAnalyzer - INFO - CommunicationStyleAnalyzer initialized\n2025-05-26 11:11:48,911 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\n.2025-05-26 11:11:48,913 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 11:11:48,913 - CommunicationStyleAnalyzer - INFO - CommunicationStyleAnalyzer initialized\n2025-05-26 11:11:48,913 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\n2025-05-26 11:11:48,913 - CommunicationStyleAnalyzer - INFO - Analyzing communication style for agent integration-test-agent with 3 messages\nE2025-05-26 11:11:48,920 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 11:11:48,920 - CommunicationStyleAnalyzer - INFO - CommunicationStyleAnalyzer initialized\n2025-05-26 11:11:48,920 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\nF2025-05-26 11:11:48,921 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 11:11:48,921 - CommunicationStyleAnalyzer - INFO - CommunicationStyleAnalyzer initialized\n2025-05-26 11:11:48,921 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\n.2025-05-26 11:11:48,922 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 11:11:48,922 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\n2025-05-26 11:11:48,922 - EmotionalIntelligence - WARNING - Missing context variable in template: 'topic'\nF2025-05-26 11:11:48,922 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 11:11:48,922 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\nF2025-05-26 11:11:48,923 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 11:11:48,923 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\n2025-05-26 11:11:48,924 - EmotionalIntelligence - WARNING - Missing context variable in template: 'achievement'\nF2025-05-26 11:11:48,924 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 11:11:48,924 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\n.\n======================================================================\nERROR: test_integration_with_communication_style (__main__.TestEmotionalIntelligence.test_integration_with_communication_style)\nTest integration between EmotionalIntelligence and CommunicationStyleAnalyzer.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emotional_intelligence.py\", line 301, in test_integration_with_communication_style\n    style = self.style_analyzer.analyze_message_history(history)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\communication_style_analyzer.py\", line 383, in analyze_message_history\n    style.prefers_structured_responses = self._analyze_structure_preference(received_messages)\n                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\communication_style_analyzer.py\", line 701, in _analyze_structure_preference\n    elif re.search(r'^\\s*(Section|Part|Step|Phase|Category)[\\s:]', content, re.MULTILINE, re.IGNORECASE):\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nTypeError: search() takes from 2 to 3 positional arguments but 4 were given\n\n======================================================================\nFAIL: test_interaction_type_detection (__main__.TestEmotionalIntelligence.test_interaction_type_detection)\nTest that interaction types are correctly categorized.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emotional_intelligence.py\", line 213, in test_interaction_type_detection\n    self.assertEqual(\nAssertionError: <InteractionType.CRISIS: 3> != <InteractionType.CELEBRATION: 4>\n\n======================================================================\nFAIL: test_response_to_anger_in_conflict (__main__.TestEmotionalResponseScenarios.test_response_to_anger_in_conflict)\nTest appropriate responses to angry messages in conflict situations.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emotional_intelligence.py\", line 404, in test_response_to_anger_in_conflict\n    self.assertIn(\"emotional distance\", formatted_response)\nAssertionError: 'emotional distance' not found in 'I acknowledge your message and will respond appropriately.'\n\n======================================================================\nFAIL: test_response_to_fear_in_crisis (__main__.TestEmotionalResponseScenarios.test_response_to_fear_in_crisis)\nTest appropriate responses to fearful messages in crisis situations.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emotional_intelligence.py\", line 433, in test_response_to_fear_in_crisis\n    self.assertIn(\"action\", formatted_response.lower())\nAssertionError: 'action' not found in \"i recognize the urgency of this situation regarding the security breach. while maintaining necessary emotional distance to ensure effective handling, i'm implementing immediate steps to address: 1) isolate affected systems, 2) assess data impact, 3) implement containment. drawing on our 'adaptability as strength' principle, we'll adjust our approach as the situation evolves.\"\n\n======================================================================\nFAIL: test_response_to_joy (__main__.TestEmotionalResponseScenarios.test_response_to_joy)\nTest appropriate responses to joyful messages.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emotional_intelligence.py\", line 381, in test_response_to_joy\n    self.assertEqual(response.expression_style[\"emotional_tone\"], EmotionalTone.POSITIVE.name)\nAssertionError: 'VERY_POSITIVE' != 'POSITIVE'\n- VERY_POSITIVE\n? -----\n+ POSITIVE\n\n\n----------------------------------------------------------------------\nRan 10 tests in 0.025s\n\nFAILED (failures=4, errors=1)\n",
      "duration": 0.11817073822021484
    },
    "test_endpoints.py": {
      "success": false,
      "output": "",
      "duration": 16.726367235183716
    },
    "test_enhanced_principle_evaluator.py": {
      "success": false,
      "output": "",
      "duration": 0.05175304412841797
    },
    "test_fairness_evaluation.py": {
      "success": true,
      "output": "",
      "duration": 0.09060430526733398
    },
    "test_framework.py": {
      "success": true,
      "output": "",
      "duration": 0.06728982925415039
    },
    "test_human_interaction_styler.py": {
      "success": false,
      "output": "2025-05-26 11:12:05,960 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\n2025-05-26 11:12:05,960 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 11:12:05,960 - HumanInteractionStyler - INFO - HumanInteractionStyler initialized\n2025-05-26 11:12:05,960 - HumanInteractionStyler - INFO - Created new profile for human: authenticity_test\n2025-05-26 11:12:05,960 - HumanInteractionStyler - INFO - Created new profile for human: new_user_test\n.2025-05-26 11:12:05,961 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\n2025-05-26 11:12:05,961 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 11:12:05,961 - HumanInteractionStyler - INFO - HumanInteractionStyler initialized\n2025-05-26 11:12:05,961 - HumanInteractionStyler - INFO - Created new profile for human: collectivist_test\n2025-05-26 11:12:05,961 - HumanInteractionStyler - INFO - Created new profile for human: individualist_test\nF2025-05-26 11:12:05,962 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\n2025-05-26 11:12:05,962 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 11:12:05,962 - HumanInteractionStyler - INFO - HumanInteractionStyler initialized\n2025-05-26 11:12:05,962 - HumanInteractionStyler - INFO - Created new profile for human: direct_user\n2025-05-26 11:12:05,969 - HumanInteractionStyler - INFO - Saved profile for human: direct_user\n2025-05-26 11:12:05,969 - HumanInteractionStyler - INFO - Created new profile for human: indirect_user\n2025-05-26 11:12:05,970 - HumanInteractionStyler - INFO - Saved profile for human: indirect_user\n.2025-05-26 11:12:05,971 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\n2025-05-26 11:12:05,971 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 11:12:05,971 - HumanInteractionStyler - INFO - HumanInteractionStyler initialized\n.2025-05-26 11:12:05,974 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\n2025-05-26 11:12:05,974 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 11:12:05,974 - HumanInteractionStyler - INFO - HumanInteractionStyler initialized\n2025-05-26 11:12:05,974 - HumanInteractionStyler - INFO - Created new profile for human: formal_user\n2025-05-26 11:12:05,974 - HumanInteractionStyler - INFO - Saved profile for human: formal_user\n2025-05-26 11:12:05,974 - HumanInteractionStyler - INFO - Created new profile for human: casual_user\n2025-05-26 11:12:05,976 - HumanInteractionStyler - INFO - Saved profile for human: casual_user\nF2025-05-26 11:12:05,977 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\n2025-05-26 11:12:05,977 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 11:12:05,977 - HumanInteractionStyler - INFO - HumanInteractionStyler initialized\n2025-05-26 11:12:05,977 - HumanInteractionStyler - INFO - Created new profile for human: test_user\n2025-05-26 11:12:05,978 - HumanInteractionStyler - INFO - Saved profile for human: test_user\n2025-05-26 11:12:05,978 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\n2025-05-26 11:12:05,985 - HumanInteractionStyler - INFO - Loaded profile for human: test_user\n2025-05-26 11:12:05,985 - HumanInteractionStyler - INFO - HumanInteractionStyler initialized\n.2025-05-26 11:12:05,986 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\n2025-05-26 11:12:05,986 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 11:12:05,986 - HumanInteractionStyler - INFO - HumanInteractionStyler initialized\n2025-05-26 11:12:05,986 - HumanInteractionStyler - INFO - Created new profile for human: serialization_test\n.2025-05-26 11:12:05,987 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\n2025-05-26 11:12:05,987 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 11:12:05,987 - HumanInteractionStyler - INFO - HumanInteractionStyler initialized\n2025-05-26 11:12:05,987 - HumanInteractionStyler - INFO - Created new profile for human: test_profile_update\n2025-05-26 11:12:05,988 - HumanInteractionStyler - INFO - Saved profile for human: test_profile_update\nF2025-05-26 11:12:05,989 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\n2025-05-26 11:12:05,989 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 11:12:05,989 - HumanInteractionStyler - INFO - HumanInteractionStyler initialized\n2025-05-26 11:12:05,989 - HumanInteractionStyler - INFO - Created new profile for human: detailed_adaptation_test\n2025-05-26 11:12:05,989 - HumanInteractionStyler - INFO - Created new profile for human: concise_adaptation_test\nF2025-05-26 11:12:05,990 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\n2025-05-26 11:12:05,990 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 11:12:05,990 - HumanInteractionStyler - INFO - HumanInteractionStyler initialized\n2025-05-26 11:12:05,990 - HumanInteractionStyler - INFO - Created new profile for human: direct_adaptation_test\n2025-05-26 11:12:05,990 - HumanInteractionStyler - INFO - Created new profile for human: indirect_adaptation_test\nF2025-05-26 11:12:05,991 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\n2025-05-26 11:12:05,991 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 11:12:05,991 - HumanInteractionStyler - INFO - HumanInteractionStyler initialized\n2025-05-26 11:12:05,991 - HumanInteractionStyler - INFO - Created new profile for human: formal_adaptation_test\n2025-05-26 11:12:05,991 - HumanInteractionStyler - INFO - Created new profile for human: casual_adaptation_test\n.\n======================================================================\nFAIL: test_cultural_adaptation (__main__.TestHumanInteractionStyler.test_cultural_adaptation)\nTest adaptation based on cultural context.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_human_interaction_styler.py\", line 286, in test_cultural_adaptation\n    self.assertIn(\"We could\", collectivist_adapted)\nAssertionError: 'We could' not found in 'We might find you should implement the new system architecture to improve performance.'\n\n======================================================================\nFAIL: test_formality_detection (__main__.TestHumanInteractionStyler.test_formality_detection)\nTest detection of formality preferences from messages.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_human_interaction_styler.py\", line 108, in test_formality_detection\n    self.assertGreater(formal_profile.communication_style.formality.value,\nAssertionError: 3 not greater than 3\n\n======================================================================\nFAIL: test_profile_update_from_message (__main__.TestHumanInteractionStyler.test_profile_update_from_message)\nTest updating a profile based on a message.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_human_interaction_styler.py\", line 153, in test_profile_update_from_message\n    self.assertGreater(updated_profile.emotional_expressiveness, 0.5)\nAssertionError: 0.5 not greater than 0.5\n\n======================================================================\nFAIL: test_response_adaptation_detail_level (__main__.TestHumanInteractionStyler.test_response_adaptation_detail_level)\nTest adaptation of responses based on detail level.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_human_interaction_styler.py\", line 220, in test_response_adaptation_detail_level\n    self.assertGreater(len(adapted_detailed), len(adapted_concise))\nAssertionError: 802 not greater than 802\n\n======================================================================\nFAIL: test_response_adaptation_directness (__main__.TestHumanInteractionStyler.test_response_adaptation_directness)\nTest adaptation of responses based on directness.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_human_interaction_styler.py\", line 261, in test_response_adaptation_directness\n    self.assertIn(\"might consider\", indirect_response)\nAssertionError: 'might consider' not found in '\\n        The system performance has been analyzed.\\n        \\n        There are several factors affecting the response time:\\n        1. Database query optimization\\n        2. Network latency\\n        3. Cache utilization\\n        \\n        In conclusion, we need to focus on optimizing database queries first\\n        as they are the main bottleneck.\\n        '\n\n----------------------------------------------------------------------\nRan 11 tests in 0.033s\n\nFAILED (failures=5)\n",
      "duration": 0.12839341163635254
    },
    "test_llm_integration_mock.py": {
      "success": false,
      "output": "Traceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_llm_integration_mock.py\", line 22, in <module>\n    from principle_engine_llm_enhanced import EnhancedPrincipleEngineLLM\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\principle_engine_llm_enhanced.py\", line 17, in <module>\n    from principle_engine_llm import LLMPrincipleEvaluator\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\principle_engine_llm.py\", line 21, in <module>\n    from agent_registry_llm_integration import LLMAgentRegistry\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\agent_registry_llm_integration.py\", line 16, in <module>\n    from openai_llm_adapter import OpenAIGPTAdapter\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\openai_llm_adapter.py\", line 21, in <module>\n    from llm_adapter_interface import (\nImportError: cannot import name 'RequestError' from 'llm_adapter_interface' (C:\\Users\\every\\Desktop\\Alex Familiar\\src\\llm_adapter_interface.py)\n",
      "duration": 0.41037654876708984
    },
    "test_media_content_processor.py": {
      "success": false,
      "output": "2025-05-26 11:12:07,118 - MediaContentProcessor - WARNING - Some media processing features will be limited. Missing dependencies: reportlab\n2025-05-26 11:12:07,118 - MediaContentProcessor - INFO - MediaContentProcessor initialized for agent test_agent\n.2025-05-26 11:12:07,118 - MediaContentProcessor - WARNING - Some media processing features will be limited. Missing dependencies: reportlab\n2025-05-26 11:12:07,118 - MediaContentProcessor - INFO - MediaContentProcessor initialized for agent test_agent\nE2025-05-26 11:12:07,121 - MediaContentProcessor - WARNING - Some media processing features will be limited. Missing dependencies: reportlab\n2025-05-26 11:12:07,121 - MediaContentProcessor - INFO - MediaContentProcessor initialized for agent test_agent\nF2025-05-26 11:12:07,121 - MediaContentProcessor - WARNING - Some media processing features will be limited. Missing dependencies: reportlab\n2025-05-26 11:12:07,121 - MediaContentProcessor - INFO - MediaContentProcessor initialized for agent test_agent\nE2025-05-26 11:12:07,122 - MediaContentProcessor - WARNING - Some media processing features will be limited. Missing dependencies: reportlab\n2025-05-26 11:12:07,122 - MediaContentProcessor - INFO - MediaContentProcessor initialized for agent test_agent\n.2025-05-26 11:12:07,122 - MediaContentProcessor - WARNING - Some media processing features will be limited. Missing dependencies: reportlab\n2025-05-26 11:12:07,122 - MediaContentProcessor - INFO - MediaContentProcessor initialized for agent test_agent\n.2025-05-26 11:12:07,123 - MediaContentProcessor - WARNING - Some media processing features will be limited. Missing dependencies: reportlab\n2025-05-26 11:12:07,123 - MediaContentProcessor - INFO - MediaContentProcessor initialized for agent test_agent\n.2025-05-26 11:12:07,123 - MediaContentProcessor - WARNING - Some media processing features will be limited. Missing dependencies: reportlab\n2025-05-26 11:12:07,123 - MediaContentProcessor - INFO - MediaContentProcessor initialized for agent test_agent\n.2025-05-26 11:12:07,124 - MediaContentProcessor - WARNING - Some media processing features will be limited. Missing dependencies: reportlab\n2025-05-26 11:12:07,124 - MediaContentProcessor - INFO - MediaContentProcessor initialized for agent test_agent\n.\n======================================================================\nERROR: test_create_image (__main__.TestMediaContentProcessor.test_create_image)\nTest creating an image content entry.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\miniconda3\\Lib\\unittest\\mock.py\", line 1396, in patched\n    return func(*newargs, **newkeywargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_media_content_processor.py\", line 95, in test_create_image\n    self.assertEqual(image_content.media_type, MediaType.IMAGE)\n                     ^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'NoneType' object has no attribute 'media_type'\n\n======================================================================\nERROR: test_document_content_serialization (__main__.TestMediaContentProcessor.test_document_content_serialization)\nTest DocumentContent serialization and deserialization.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_media_content_processor.py\", line 324, in test_document_content_serialization\n    restored_doc = DocumentContent.from_dict(doc_dict)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\media_content_processor.py\", line 304, in from_dict\n    return cls(**data_copy)\n           ^^^^^^^^^^^^^^^^\nTypeError: DocumentContent.__init__() got an unexpected keyword argument 'is_binary'\n\n======================================================================\nFAIL: test_device_profiles (__main__.TestMediaContentProcessor.test_device_profiles)\nTest device profile functionality.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_media_content_processor.py\", line 223, in test_device_profiles\n    self.assertIn(category, profiles)\nAssertionError: <DeviceCategory.E_READER: 'e_reader'> not found in {<DeviceCategory.DESKTOP: 'desktop'>: <media_content_processor.DeviceProfile object at 0x0000028162B20500>, <DeviceCategory.TABLET: 'tablet'>: <media_content_processor.DeviceProfile object at 0x00000281620803B0>, <DeviceCategory.MOBILE: 'mobile'>: <media_content_processor.DeviceProfile object at 0x0000028162C205F0>, <DeviceCategory.SCREEN_READER: 'screen_reader'>: <media_content_processor.DeviceProfile object at 0x0000028162CCC380>, <DeviceCategory.LOW_BANDWIDTH: 'low_bandwidth'>: <media_content_processor.DeviceProfile object at 0x0000028162CDF590>}\n\n----------------------------------------------------------------------\nRan 9 tests in 0.008s\n\nFAILED (failures=1, errors=2)\n",
      "duration": 0.8123767375946045
    },
    "test_multi_model_integration.py": {
      "success": false,
      "output": "",
      "duration": 0.10113120079040527
    },
    "test_multilingual_engine.py": {
      "success": false,
      "output": "Traceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_multilingual_engine.py\", line 17, in <module>\n    from principle_engine import PrincipleEngine, Principle\nImportError: cannot import name 'Principle' from 'principle_engine' (C:\\Users\\every\\Desktop\\Alex Familiar\\src\\principle_engine.py)\n",
      "duration": 0.11971306800842285
    },
    "test_orchestration_analytics.py": {
      "success": false,
      "output": "Traceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_orchestration_analytics.py\", line 20, in <module>\n    from principle_engine import PrincipleEngine, Principle\nImportError: cannot import name 'Principle' from 'principle_engine' (C:\\Users\\every\\Desktop\\Alex Familiar\\src\\principle_engine.py)\n",
      "duration": 0.3851931095123291
    },
    "test_principle_engine.py": {
      "success": false,
      "output": "2025-05-26 11:12:07,907 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 11:12:07,907 - PrincipleEngine - INFO - Updated overall principle consistency score: 97.90\n2025-05-26 11:12:07,907 - PrincipleEngine - INFO - Message test-2 evaluated with overall score: 79.00\n.2025-05-26 11:12:07,907 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 11:12:07,907 - PrincipleEngine - INFO - Updated overall principle consistency score: 99.55\n2025-05-26 11:12:07,907 - PrincipleEngine - INFO - Message test-1 evaluated with overall score: 95.50\n2025-05-26 11:12:07,907 - PrincipleEngine - INFO - Updated overall principle consistency score: 97.50\n2025-05-26 11:12:07,907 - PrincipleEngine - INFO - Message test-2 evaluated with overall score: 79.00\n.2025-05-26 11:12:07,907 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 11:12:07,907 - PrincipleEngine - INFO - Response adjusted to align with principles for message: test-2\n.2025-05-26 11:12:07,907 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n.2025-05-26 11:12:07,907 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n.2025-05-26 11:12:07,908 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 11:12:07,908 - PrincipleEngine - INFO - Updated overall principle consistency score: 97.90\n2025-05-26 11:12:07,908 - PrincipleEngine - INFO - Message test-2 evaluated with overall score: 79.00\n2025-05-26 11:12:07,908 - PrincipleEngine - INFO - Principle consistency scores have been reset\n.2025-05-26 11:12:07,908 - AdaptiveBridgeBuilder - ERROR - Failed to load agent card from src/agent_card.json: [Errno 2] No such file or directory: 'src/agent_card.json'\nE2025-05-26 11:12:07,909 - AdaptiveBridgeBuilder - ERROR - Failed to load agent card from src/agent_card.json: [Errno 2] No such file or directory: 'src/agent_card.json'\nE2025-05-26 11:12:07,909 - AdaptiveBridgeBuilder - ERROR - Failed to load agent card from src/agent_card.json: [Errno 2] No such file or directory: 'src/agent_card.json'\nE2025-05-26 11:12:07,910 - AdaptiveBridgeBuilder - ERROR - Failed to load agent card from src/agent_card.json: [Errno 2] No such file or directory: 'src/agent_card.json'\nE\n======================================================================\nERROR: test_get_principle_descriptions (__main__.TestPrincipleGuidedBridgeBuilder.test_get_principle_descriptions)\nTest getting principle descriptions from the agent.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\adaptive_bridge_builder.py\", line 46, in __init__\n    with open(agent_card_path, 'r') as f:\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^\nFileNotFoundError: [Errno 2] No such file or directory: 'src/agent_card.json'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_principle_engine.py\", line 135, in setUp\n    self.agent = PrincipleGuidedBridgeBuilder()\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\principle_engine_example.py\", line 43, in __init__\n    super().__init__(agent_id, agent_card_path)\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\adaptive_bridge_builder.py\", line 54, in __init__\n    with open(agent_card_path, 'w') as f:\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^\nFileNotFoundError: [Errno 2] No such file or directory: 'src/agent_card.json'\n\n======================================================================\nERROR: test_initialization (__main__.TestPrincipleGuidedBridgeBuilder.test_initialization)\nTest that the agent initializes correctly.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\adaptive_bridge_builder.py\", line 46, in __init__\n    with open(agent_card_path, 'r') as f:\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^\nFileNotFoundError: [Errno 2] No such file or directory: 'src/agent_card.json'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_principle_engine.py\", line 135, in setUp\n    self.agent = PrincipleGuidedBridgeBuilder()\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\principle_engine_example.py\", line 43, in __init__\n    super().__init__(agent_id, agent_card_path)\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\adaptive_bridge_builder.py\", line 54, in __init__\n    with open(agent_card_path, 'w') as f:\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^\nFileNotFoundError: [Errno 2] No such file or directory: 'src/agent_card.json'\n\n======================================================================\nERROR: test_principle_consistency_report (__main__.TestPrincipleGuidedBridgeBuilder.test_principle_consistency_report)\nTest getting a principle consistency report.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\adaptive_bridge_builder.py\", line 46, in __init__\n    with open(agent_card_path, 'r') as f:\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^\nFileNotFoundError: [Errno 2] No such file or directory: 'src/agent_card.json'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_principle_engine.py\", line 135, in setUp\n    self.agent = PrincipleGuidedBridgeBuilder()\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\principle_engine_example.py\", line 43, in __init__\n    super().__init__(agent_id, agent_card_path)\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\adaptive_bridge_builder.py\", line 54, in __init__\n    with open(agent_card_path, 'w') as f:\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^\nFileNotFoundError: [Errno 2] No such file or directory: 'src/agent_card.json'\n\n======================================================================\nERROR: test_process_message (__main__.TestPrincipleGuidedBridgeBuilder.test_process_message)\nTest that messages are processed with principle evaluation.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\adaptive_bridge_builder.py\", line 46, in __init__\n    with open(agent_card_path, 'r') as f:\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^\nFileNotFoundError: [Errno 2] No such file or directory: 'src/agent_card.json'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_principle_engine.py\", line 135, in setUp\n    self.agent = PrincipleGuidedBridgeBuilder()\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\principle_engine_example.py\", line 43, in __init__\n    super().__init__(agent_id, agent_card_path)\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\adaptive_bridge_builder.py\", line 54, in __init__\n    with open(agent_card_path, 'w') as f:\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^\nFileNotFoundError: [Errno 2] No such file or directory: 'src/agent_card.json'\n\n----------------------------------------------------------------------\nRan 10 tests in 0.003s\n\nFAILED (errors=4)\n",
      "duration": 0.08419060707092285
    },
    "test_principle_engine_positive.py": {
      "success": true,
      "output": "",
      "duration": 0.10488319396972656
    },
    "test_principles_integration.py": {
      "success": false,
      "output": "",
      "duration": 0.057280778884887695
    },
    "test_project_orchestrator.py": {
      "success": false,
      "output": "2025-05-26 11:12:08,435 - CollaborativeTaskHandler - INFO - TaskCoordinator initialized for agent test-orchestrator\n2025-05-26 11:12:08,435 - OrchestratorEngine - INFO - OrchestratorEngine initialized for agent test-orchestrator\n2025-05-26 11:12:08,435 - OrchestratorEngine - INFO - Registered agent test-strategy-agent with 2 capabilities\n2025-05-26 11:12:08,435 - OrchestratorEngine - INFO - Registered agent test-research-agent with 2 capabilities\n2025-05-26 11:12:08,435 - OrchestratorEngine - INFO - Registered agent test-analysis-agent with 2 capabilities\n2025-05-26 11:12:08,436 - ProjectOrchestrator - INFO - ProjectOrchestrator initialized for agent test-orchestrator\n2025-05-26 11:12:08,436 - ProjectOrchestrator - INFO - Created project 'Milestone Test Project' with ID project-a12486fc-dc2d-4439-b332-2e745407f113\n2025-05-26 11:12:08,436 - ProjectOrchestrator - INFO - Added milestone 'Test Milestone' to project project-a12486fc-dc2d-4439-b332-2e745407f113\n.2025-05-26 11:12:08,436 - CollaborativeTaskHandler - INFO - TaskCoordinator initialized for agent test-orchestrator\n2025-05-26 11:12:08,436 - OrchestratorEngine - INFO - OrchestratorEngine initialized for agent test-orchestrator\n2025-05-26 11:12:08,436 - OrchestratorEngine - INFO - Registered agent test-strategy-agent with 2 capabilities\n2025-05-26 11:12:08,436 - OrchestratorEngine - INFO - Registered agent test-research-agent with 2 capabilities\n2025-05-26 11:12:08,436 - OrchestratorEngine - INFO - Registered agent test-analysis-agent with 2 capabilities\n2025-05-26 11:12:08,436 - ProjectOrchestrator - INFO - ProjectOrchestrator initialized for agent test-orchestrator\n2025-05-26 11:12:08,436 - ProjectOrchestrator - INFO - Created project 'Test Project' with ID project-5459cd88-c5ad-4f89-9556-e8f356c021a4\n.2025-05-26 11:12:08,436 - CollaborativeTaskHandler - INFO - TaskCoordinator initialized for agent test-orchestrator\n2025-05-26 11:12:08,436 - OrchestratorEngine - INFO - OrchestratorEngine initialized for agent test-orchestrator\n2025-05-26 11:12:08,436 - OrchestratorEngine - INFO - Registered agent test-strategy-agent with 2 capabilities\n2025-05-26 11:12:08,436 - OrchestratorEngine - INFO - Registered agent test-research-agent with 2 capabilities\n2025-05-26 11:12:08,436 - OrchestratorEngine - INFO - Registered agent test-analysis-agent with 2 capabilities\n2025-05-26 11:12:08,436 - ProjectOrchestrator - INFO - ProjectOrchestrator initialized for agent test-orchestrator\n2025-05-26 11:12:08,436 - ProjectOrchestrator - INFO - Created project 'Task Test Project' with ID project-94bc4e38-fec1-47dc-8fd8-113fe07423fd\n2025-05-26 11:12:08,436 - ProjectOrchestrator - INFO - Added milestone 'Test Milestone' to project project-94bc4e38-fec1-47dc-8fd8-113fe07423fd\n2025-05-26 11:12:08,436 - CollaborativeTaskHandler - INFO - Created task task-bc46d8f4d11d4890a80e097c760be35b: Test Task\n2025-05-26 11:12:08,436 - ProjectOrchestrator - INFO - Created task 'Test Task' in milestone milestone-1723066a-d784-452d-890b-ab44ef0d5691 of project project-94bc4e38-fec1-47dc-8fd8-113fe07423fd\n.2025-05-26 11:12:08,436 - CollaborativeTaskHandler - INFO - TaskCoordinator initialized for agent test-orchestrator\n2025-05-26 11:12:08,436 - OrchestratorEngine - INFO - OrchestratorEngine initialized for agent test-orchestrator\n2025-05-26 11:12:08,436 - OrchestratorEngine - INFO - Registered agent test-strategy-agent with 2 capabilities\n2025-05-26 11:12:08,436 - OrchestratorEngine - INFO - Registered agent test-research-agent with 2 capabilities\n2025-05-26 11:12:08,436 - OrchestratorEngine - INFO - Registered agent test-analysis-agent with 2 capabilities\n2025-05-26 11:12:08,436 - ProjectOrchestrator - INFO - ProjectOrchestrator initialized for agent test-orchestrator\n2025-05-26 11:12:08,436 - ProjectOrchestrator - INFO - Created project 'Resource Test Project' with ID project-d9c49fcc-94bd-4704-a38e-5ff9cc92ba03\nE2025-05-26 11:12:08,438 - CollaborativeTaskHandler - INFO - TaskCoordinator initialized for agent test-orchestrator\n2025-05-26 11:12:08,438 - OrchestratorEngine - INFO - OrchestratorEngine initialized for agent test-orchestrator\n2025-05-26 11:12:08,438 - OrchestratorEngine - INFO - Registered agent test-strategy-agent with 2 capabilities\n2025-05-26 11:12:08,438 - OrchestratorEngine - INFO - Registered agent test-research-agent with 2 capabilities\n2025-05-26 11:12:08,438 - OrchestratorEngine - INFO - Registered agent test-analysis-agent with 2 capabilities\n2025-05-26 11:12:08,438 - ProjectOrchestrator - INFO - ProjectOrchestrator initialized for agent test-orchestrator\n2025-05-26 11:12:08,438 - ProjectOrchestrator - INFO - Created project 'Status Update Test Project' with ID project-9607b69e-304d-48b5-bd9c-596bb7e3cc37\nE2025-05-26 11:12:08,439 - CollaborativeTaskHandler - INFO - TaskCoordinator initialized for agent test-orchestrator\n2025-05-26 11:12:08,439 - OrchestratorEngine - INFO - OrchestratorEngine initialized for agent test-orchestrator\n2025-05-26 11:12:08,439 - OrchestratorEngine - INFO - Registered agent test-strategy-agent with 2 capabilities\n2025-05-26 11:12:08,439 - OrchestratorEngine - INFO - Registered agent test-research-agent with 2 capabilities\n2025-05-26 11:12:08,439 - OrchestratorEngine - INFO - Registered agent test-analysis-agent with 2 capabilities\n2025-05-26 11:12:08,439 - ProjectOrchestrator - INFO - ProjectOrchestrator initialized for agent test-orchestrator\n2025-05-26 11:12:08,439 - ProjectOrchestrator - INFO - Created project 'Progress Test Project' with ID project-4cdac796-3e1e-4167-b81e-01c473935e43\n2025-05-26 11:12:08,439 - ProjectOrchestrator - INFO - Added milestone 'Progress Test Milestone' to project project-4cdac796-3e1e-4167-b81e-01c473935e43\n2025-05-26 11:12:08,439 - CollaborativeTaskHandler - INFO - Created task task-341d8953d52c44b986995d83f883ede9: Progress Test Task 1\n2025-05-26 11:12:08,439 - ProjectOrchestrator - INFO - Created task 'Progress Test Task 1' in milestone milestone-c30de3d0-2748-4c6d-a78a-b7d7ac60d868 of project project-4cdac796-3e1e-4167-b81e-01c473935e43\n2025-05-26 11:12:08,439 - CollaborativeTaskHandler - INFO - Created task task-5581e52995f94adc8a9484dd6e3d3665: Progress Test Task 2\n2025-05-26 11:12:08,439 - ProjectOrchestrator - INFO - Created task 'Progress Test Task 2' in milestone milestone-c30de3d0-2748-4c6d-a78a-b7d7ac60d868 of project project-4cdac796-3e1e-4167-b81e-01c473935e43\n2025-05-26 11:12:08,439 - CollaborativeTaskHandler - ERROR - Agent test-research-agent not assigned to task task-341d8953d52c44b986995d83f883ede9\n2025-05-26 11:12:08,439 - CollaborativeTaskHandler - ERROR - Agent test-analysis-agent not assigned to task task-5581e52995f94adc8a9484dd6e3d3665\n2025-05-26 11:12:08,439 - CollaborativeTaskHandler - ERROR - Agent test-research-agent not assigned to task task-341d8953d52c44b986995d83f883ede9\nE\n======================================================================\nERROR: test_resource_management (__main__.TestProjectOrchestrator.test_resource_management)\nTest resource management functionality.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_project_orchestrator.py\", line 198, in test_resource_management\n    resource = self.project_orchestrator.register_resource(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'ProjectOrchestrator' object has no attribute 'register_resource'\n\n======================================================================\nERROR: test_status_update (__main__.TestProjectOrchestrator.test_status_update)\nTest creating status updates.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_project_orchestrator.py\", line 350, in test_status_update\n    status_update = self.project_orchestrator.create_status_update(\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'ProjectOrchestrator' object has no attribute 'create_status_update'\n\n======================================================================\nERROR: test_track_milestone_progress (__main__.TestProjectOrchestrator.test_track_milestone_progress)\nTest tracking milestone progress.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_project_orchestrator.py\", line 318, in test_track_milestone_progress\n    milestone_progress = self.project_orchestrator.track_milestone_progress(\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'ProjectOrchestrator' object has no attribute 'track_milestone_progress'\n\n----------------------------------------------------------------------\nRan 6 tests in 0.005s\n\nFAILED (errors=3)\n",
      "duration": 0.3809819221496582
    },
    "test_protocol_adapter.py": {
      "success": false,
      "output": "Traceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_protocol_adapter.py\", line 21, in <module>\n    from protocol_adapter import ProtocolNameAdapter\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\protocol_adapter.py\", line 20, in <module>\n    from universal_agent_connector import (\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\universal_agent_connector.py\", line 738\n    __all__ = [\"AgentFramework\", \"UniversalAgentConnector\"]\nIndentationError: expected an indented block after 'try' statement on line 735\n",
      "duration": 0.2000741958618164
    },
    "test_runner.py": {
      "success": false,
      "output": "Traceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_runner.py\", line 784, in <module>\n    sys.exit(main())\n             ^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_runner.py\", line 759, in main\n    framework.add_suite(create_multi_turn_test_suite())\n                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_runner.py\", line 193, in create_multi_turn_test_suite\n    test_case = create_multi_turn_test_case(scenario)\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_runner.py\", line 403, in create_multi_turn_test_case\n    TestMetric(\nTypeError: TestMetric.__init__() got an unexpected keyword argument 'evaluator'\n",
      "duration": 0.3874340057373047
    },
    "test_scenarios.py": {
      "success": false,
      "output": "2025-05-26 11:12:09,121 - TestFramework - INFO - Running suite: Adaptive Bridge Builder Core Tests\n2025-05-26 11:12:09,122 - TestFramework - INFO - Running test suite: Adaptive Bridge Builder Core Tests\n2025-05-26 11:12:09,122 - TestFramework - INFO - Running test case: Communication Style Adaptation Test [01c2973d-25f7-4bc0-a780-2e59f63be1b7]\n2025-05-26 11:12:09,122 - CommunicationStyleAnalyzer - INFO - CommunicationStyleAnalyzer initialized\n2025-05-26 11:12:09,122 - TestFramework - ERROR - Error in test case Communication Style Adaptation Test: 'CommunicationStyleAnalyzer' object has no attribute 'analyze_message'\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_framework.py\", line 128, in run\n    result_data = self.execute(test_data)\n                  ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_scenarios.py\", line 97, in execute\n    detected_style = analyzer.analyze_message(message)\n                     ^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'CommunicationStyleAnalyzer' object has no attribute 'analyze_message'\n2025-05-26 11:12:09,124 - TestFramework - INFO - Test case completed: Communication Style Adaptation Test [01c2973d-25f7-4bc0-a780-2e59f63be1b7] - ERROR in 2.00ms\n2025-05-26 11:12:09,124 - TestFramework - INFO - Running test case: Conflict Resolution Test [e99ba1d4-e5cd-4339-93c8-c82c22875ddb]\n2025-05-26 11:12:09,124 - TestFramework - ERROR - Error in test case Conflict Resolution Test: PrincipleEngine.__init__() got an unexpected keyword argument 'principles'\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_framework.py\", line 124, in run\n    test_data = self.setup()\n                ^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_scenarios.py\", line 154, in setup\n    principle_engine = PrincipleEngine(\n                       ^^^^^^^^^^^^^^^^\nTypeError: PrincipleEngine.__init__() got an unexpected keyword argument 'principles'\n2025-05-26 11:12:09,124 - TestFramework - INFO - Test case completed: Conflict Resolution Test [e99ba1d4-e5cd-4339-93c8-c82c22875ddb] - ERROR in 0.00ms\n2025-05-26 11:12:09,124 - TestFramework - INFO - Suite Adaptive Bridge Builder Core Tests completed: 0 passed, 0 failed, 2 errors, 0 skipped\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_scenarios.py\", line 277, in <module>\n    main()\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_scenarios.py\", line 272, in main\n    report_path = framework.generate_report(results)\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_framework.py\", line 354, in generate_report\n    json.dump(report, f, indent=2)\n  File \"C:\\Users\\every\\miniconda3\\Lib\\json\\__init__.py\", line 179, in dump\n    for chunk in iterable:\n                 ^^^^^^^^\n  File \"C:\\Users\\every\\miniconda3\\Lib\\json\\encoder.py\", line 432, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n  File \"C:\\Users\\every\\miniconda3\\Lib\\json\\encoder.py\", line 406, in _iterencode_dict\n    yield from chunks\n  File \"C:\\Users\\every\\miniconda3\\Lib\\json\\encoder.py\", line 406, in _iterencode_dict\n    yield from chunks\n  File \"C:\\Users\\every\\miniconda3\\Lib\\json\\encoder.py\", line 406, in _iterencode_dict\n    yield from chunks\n  File \"C:\\Users\\every\\miniconda3\\Lib\\json\\encoder.py\", line 326, in _iterencode_list\n    yield from chunks\n  File \"C:\\Users\\every\\miniconda3\\Lib\\json\\encoder.py\", line 406, in _iterencode_dict\n    yield from chunks\n  File \"C:\\Users\\every\\miniconda3\\Lib\\json\\encoder.py\", line 406, in _iterencode_dict\n    yield from chunks\n  File \"C:\\Users\\every\\miniconda3\\Lib\\json\\encoder.py\", line 439, in _iterencode\n    o = _default(o)\n        ^^^^^^^^^^^\n  File \"C:\\Users\\every\\miniconda3\\Lib\\json\\encoder.py\", line 180, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type CommunicationStyleAnalyzer is not JSON serializable\n",
      "duration": 0.08454728126525879
    },
    "test_universal_agent_connector.py": {
      "success": false,
      "output": "Traceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_universal_agent_connector.py\", line 18, in <module>\n    from universal_agent_connector import (\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\universal_agent_connector.py\", line 738\n    __all__ = [\"AgentFramework\", \"UniversalAgentConnector\"]\nIndentationError: expected an indented block after 'try' statement on line 735\n",
      "duration": 0.1180260181427002
    }
  },
  "summary": {
    "total": 28,
    "passed": 7,
    "failed": 21
  }
}