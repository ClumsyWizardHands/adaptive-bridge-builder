{
  "start_time": "2025-05-26T10:33:48.566123",
  "end_time": "2025-05-26T10:34:14.409080",
  "total_duration": 25.842957,
  "test_results": {
    "test_a2a_task_handler.py": {
      "success": false,
      "output": "2025-05-26 10:33:53,493 - A2ATaskHandler - INFO - A2ATaskHandler initialized for agent test-agent-001\nC:\\Users\\every\\Desktop\\Alex Familiar\\src\\a2a_task_handler.py:341: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).\n  \"received_at\": datetime.utcnow().isoformat(),\nC:\\Users\\every\\Desktop\\Alex Familiar\\src\\a2a_task_handler.py:97: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).\n  self.last_updated = datetime.utcnow().isoformat()\nC:\\Users\\every\\Desktop\\Alex Familiar\\src\\a2a_task_handler.py:113: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).\n  self.last_updated = datetime.utcnow().isoformat()\n2025-05-26 10:33:53,496 - A2ATaskHandler - ERROR - Error processing task test-msg-001 from test-agent-002: 'A2ATaskHandler' object has no attribute '_handle_query'\nE2025-05-26 10:33:53,498 - A2ATaskHandler - INFO - A2ATaskHandler initialized for agent test-agent-001\n2025-05-26 10:33:53,500 - A2ATaskHandler - ERROR - Error processing task test-msg-001 from test-agent-002: 'A2ATaskHandler' object has no attribute '_handle_query'\nE2025-05-26 10:33:53,503 - A2ATaskHandler - INFO - A2ATaskHandler initialized for agent test-agent-001\nF2025-05-26 10:33:53,504 - A2ATaskHandler - INFO - A2ATaskHandler initialized for agent test-agent-001\n2025-05-26 10:33:53,506 - A2ATaskHandler - ERROR - Error processing task test-msg-error from test-agent-002: Test error\nE2025-05-26 10:33:53,508 - A2ATaskHandler - INFO - A2ATaskHandler initialized for agent test-agent-001\n.2025-05-26 10:33:53,508 - A2ATaskHandler - INFO - A2ATaskHandler initialized for agent test-agent-001\n2025-05-26 10:33:53,510 - A2ATaskHandler - ERROR - Error processing task test-msg-001 from test-agent-002: 'A2ATaskHandler' object has no attribute '_handle_query'\nE2025-05-26 10:33:53,512 - A2ATaskHandler - INFO - A2ATaskHandler initialized for agent test-agent-001\n.2025-05-26 10:33:53,513 - A2ATaskHandler - INFO - A2ATaskHandler initialized for agent test-agent-001\n2025-05-26 10:33:53,515 - A2ATaskHandler - ERROR - Error processing task test-msg-001 from test-agent-002: 'A2ATaskHandler' object has no attribute '_handle_query'\nE\n======================================================================\nERROR: test_conflict_detection (__main__.TestA2ATaskHandler.test_conflict_detection)\nTest that conflicts are detected and recorded.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\a2a_task_handler.py\", line 435, in handle_task\n    response = self._process_task(\n               ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\a2a_task_handler.py\", line 771, in _process_task\n    result = self._handle_query(content, content_type, agent_id, context)\n             ^^^^^^^^^^^^^^^^^^\nAttributeError: 'A2ATaskHandler' object has no attribute '_handle_query'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_a2a_task_handler.py\", line 253, in test_conflict_detection\n    response = self.task_handler.handle_task(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\a2a_task_handler.py\", line 471, in handle_task\n    return self._create_error_response(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'A2ATaskHandler' object has no attribute '_create_error_response'\n\n======================================================================\nERROR: test_conversation_context (__main__.TestA2ATaskHandler.test_conversation_context)\nTest that conversation context is maintained across multiple tasks.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\a2a_task_handler.py\", line 435, in handle_task\n    response = self._process_task(\n               ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\a2a_task_handler.py\", line 771, in _process_task\n    result = self._handle_query(content, content_type, agent_id, context)\n             ^^^^^^^^^^^^^^^^^^\nAttributeError: 'A2ATaskHandler' object has no attribute '_handle_query'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_a2a_task_handler.py\", line 174, in test_conversation_context\n    self.task_handler.handle_task(\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\a2a_task_handler.py\", line 471, in handle_task\n    return self._create_error_response(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'A2ATaskHandler' object has no attribute '_create_error_response'\n\n======================================================================\nERROR: test_error_handling (__main__.TestA2ATaskHandler.test_error_handling)\nTest error handling in task processing.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\a2a_task_handler.py\", line 435, in handle_task\n    response = self._process_task(\n               ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\miniconda3\\Lib\\unittest\\mock.py\", line 1139, in __call__\n    return self._mock_call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\miniconda3\\Lib\\unittest\\mock.py\", line 1143, in _mock_call\n    return self._execute_mock_call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\miniconda3\\Lib\\unittest\\mock.py\", line 1198, in _execute_mock_call\n    raise effect\nException: Test error\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_a2a_task_handler.py\", line 209, in test_error_handling\n    response = self.task_handler.handle_task(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\a2a_task_handler.py\", line 471, in handle_task\n    return self._create_error_response(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'A2ATaskHandler' object has no attribute '_create_error_response'\n\n======================================================================\nERROR: test_handle_task (__main__.TestA2ATaskHandler.test_handle_task)\nTest the main handle_task method.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\a2a_task_handler.py\", line 435, in handle_task\n    response = self._process_task(\n               ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\a2a_task_handler.py\", line 771, in _process_task\n    result = self._handle_query(content, content_type, agent_id, context)\n             ^^^^^^^^^^^^^^^^^^\nAttributeError: 'A2ATaskHandler' object has no attribute '_handle_query'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_a2a_task_handler.py\", line 146, in test_handle_task\n    query_response = self.task_handler.handle_task(\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\a2a_task_handler.py\", line 471, in handle_task\n    return self._create_error_response(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'A2ATaskHandler' object has no attribute '_create_error_response'\n\n======================================================================\nERROR: test_principle_evaluation (__main__.TestA2ATaskHandler.test_principle_evaluation)\nTest that principle evaluation is applied.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\a2a_task_handler.py\", line 435, in handle_task\n    response = self._process_task(\n               ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\a2a_task_handler.py\", line 771, in _process_task\n    result = self._handle_query(content, content_type, agent_id, context)\n             ^^^^^^^^^^^^^^^^^^\nAttributeError: 'A2ATaskHandler' object has no attribute '_handle_query'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_a2a_task_handler.py\", line 231, in test_principle_evaluation\n    response = self.task_handler.handle_task(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\a2a_task_handler.py\", line 471, in handle_task\n    return self._create_error_response(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'A2ATaskHandler' object has no attribute '_create_error_response'\n\n======================================================================\nFAIL: test_determine_intent (__main__.TestA2ATaskHandler.test_determine_intent)\nTest intent determination from content.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_a2a_task_handler.py\", line 132, in test_determine_intent\n    self.assertEqual(\nAssertionError: 'request' != 'instruct'\n- request\n+ instruct\n\n\n----------------------------------------------------------------------\nRan 8 tests in 0.027s\n\nFAILED (failures=1, errors=5)\n",
      "duration": 0.15503692626953125
    },
    "test_ai_framework_detector.py": {
      "success": false,
      "output": "Traceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_ai_framework_detector.py\", line 355, in <module>\n    passed, failed = test_framework_detection()\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_ai_framework_detector.py\", line 247, in test_framework_detection\n    print(\"\\u2713 PASS\")\n  File \"C:\\Users\\every\\miniconda3\\Lib\\encodings\\cp1252.py\", line 19, in encode\n    return codecs.charmap_encode(input,self.errors,encoding_table)[0]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nUnicodeEncodeError: 'charmap' codec can't encode character '\\u2713' in position 0: character maps to <undefined>\n",
      "duration": 0.06090259552001953
    },
    "test_anthropic_mistral.py": {
      "success": true,
      "output": "",
      "duration": 0.24627399444580078
    },
    "test_api_gateway_system.py": {
      "success": true,
      "output": "",
      "duration": 0.13340449333190918
    },
    "test_api_gateway_system_calendar.py": {
      "success": false,
      "output": "Traceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_api_gateway_system_calendar.py\", line 16, in <module>\n    from api_gateway_system_calendar import (\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\api_gateway_system_calendar.py\", line 31, in <module>\n    from principle_engine_example import PrincipleEvaluationRequest\nImportError: cannot import name 'PrincipleEvaluationRequest' from 'principle_engine_example' (C:\\Users\\every\\Desktop\\Alex Familiar\\src\\principle_engine_example.py)\n",
      "duration": 0.1370704174041748
    },
    "test_emoji_emotional_analyzer.py": {
      "success": false,
      "output": "Traceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emoji_emotional_analyzer.py\", line 4, in <module>\n    from src.emoji_emotional_analyzer import (\nModuleNotFoundError: No module named 'src.emoji_emotional_analyzer'\n",
      "duration": 0.06116676330566406
    },
    "test_emoji_emotional_analyzer_enhanced.py": {
      "success": false,
      "output": "F.......F........FF.F.F..FF.......\n======================================================================\nFAIL: test_conflicting_emotions (__main__.TestEdgeCases.test_conflicting_emotions)\nTest handling input with strongly conflicting emotions.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emoji_emotional_analyzer_enhanced.py\", line 619, in test_conflicting_emotions\n    self.assertIsNotNone(emotion.secondary_emotion)\nAssertionError: unexpectedly None\n\n======================================================================\nFAIL: test_map_to_emotional_states (__main__.TestEmojiEmotionalAnalyzer.test_map_to_emotional_states)\nTest the map_to_emotional_states method.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emoji_emotional_analyzer_enhanced.py\", line 531, in test_map_to_emotional_states\n    self.assertIn(EmotionCategory.JOY, emotion_map)\nAssertionError: <EmotionCategory.JOY: 1> not found in {<EmotionCategory.NEUTRAL: 9>: 1.0}\n\n======================================================================\nFAIL: test_calculate_intensity (__main__.TestEmotionDetectionEngine.test_calculate_intensity)\nTest calculation of emotional intensity from emojis.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emoji_emotional_analyzer_enhanced.py\", line 117, in test_calculate_intensity\n    self.assertIn(intensity, [EmotionIntensity.HIGH, EmotionIntensity.VERY_HIGH])\nAssertionError: <EmotionIntensity.MEDIUM: 3> not found in [<EmotionIntensity.HIGH: 4>, <EmotionIntensity.VERY_HIGH: 5>]\n\n======================================================================\nFAIL: test_detect_complex_emotion_patterns (__main__.TestEmotionDetectionEngine.test_detect_complex_emotion_patterns)\nTest detection of complex emotion patterns.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emoji_emotional_analyzer_enhanced.py\", line 105, in test_detect_complex_emotion_patterns\n    self.assertEqual(state.primary_emotion, emotion)\nAssertionError: <EmotionCategory.NEUTRAL: 9> != <EmotionCategory.SADNESS: 2>\n\n======================================================================\nFAIL: test_detect_emotion_with_modifiers (__main__.TestEmotionDetectionEngine.test_detect_emotion_with_modifiers)\nTest emotion detection with intensity modifiers.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emoji_emotional_analyzer_enhanced.py\", line 91, in test_detect_emotion_with_modifiers\n    self.assertEqual(base_state.primary_emotion, intensified_state.primary_emotion)\nAssertionError: <EmotionCategory.JOY: 1> != <EmotionCategory.NEUTRAL: 9>\n\n======================================================================\nFAIL: test_extract_emojis (__main__.TestEmotionDetectionEngine.test_extract_emojis)\nTest extracting emojis from mixed text.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emoji_emotional_analyzer_enhanced.py\", line 44, in test_extract_emojis\n    self.assertEqual(len(emojis), 3)\nAssertionError: 1 != 3\n\n======================================================================\nFAIL: test_map_to_emotional_states_complex (__main__.TestEmotionMappingSystem.test_map_to_emotional_states_complex)\nTest mapping complex emoji sequences to emotional states.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emoji_emotional_analyzer_enhanced.py\", line 169, in test_map_to_emotional_states_complex\n    self.assertIn(EmotionCategory.JOY, emotion_map)\nAssertionError: <EmotionCategory.JOY: 1> not found in {<EmotionCategory.NEUTRAL: 9>: 1.0}\n\n======================================================================\nFAIL: test_map_to_emotional_states_simple (__main__.TestEmotionMappingSystem.test_map_to_emotional_states_simple)\nTest mapping a simple emoji to multiple emotional states.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emoji_emotional_analyzer_enhanced.py\", line 159, in test_map_to_emotional_states_simple\n    self.assertGreater(emotion_map[EmotionCategory.JOY], 0.5)\nAssertionError: 0.4347826086956522 not greater than 0.5\n\n----------------------------------------------------------------------\nRan 34 tests in 0.004s\n\nFAILED (failures=8)\n",
      "duration": 0.1193234920501709
    },
    "test_emoji_sequence_optimizer.py": {
      "success": false,
      "output": "EEEEEEEEEEE\n======================================================================\nERROR: test_basic_optimization (__main__.TestEmojiSequenceOptimizer.test_basic_optimization)\nTest basic sequence optimization with default context.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emoji_sequence_optimizer.py\", line 24, in setUp\n    self.knowledge_base = EmojiKnowledgeBase(load_default=True)\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_knowledge_base.py\", line 261, in __init__\n    self.load_default_dataset()\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_knowledge_base.py\", line 280, in load_default_dataset\n    self.add_emoji(\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_knowledge_base.py\", line 490, in add_emoji\n    self._add_to_version_tracking(\"new_emojis\", emoji)\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'EmojiKnowledgeBase' object has no attribute '_add_to_version_tracking'\n\n======================================================================\nERROR: test_batch_optimization (__main__.TestEmojiSequenceOptimizer.test_batch_optimization)\nTest optimizing multiple sequences in batch.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emoji_sequence_optimizer.py\", line 24, in setUp\n    self.knowledge_base = EmojiKnowledgeBase(load_default=True)\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_knowledge_base.py\", line 261, in __init__\n    self.load_default_dataset()\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_knowledge_base.py\", line 280, in load_default_dataset\n    self.add_emoji(\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_knowledge_base.py\", line 490, in add_emoji\n    self._add_to_version_tracking(\"new_emojis\", emoji)\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'EmojiKnowledgeBase' object has no attribute '_add_to_version_tracking'\n\n======================================================================\nERROR: test_cultural_context_adaptation (__main__.TestEmojiSequenceOptimizer.test_cultural_context_adaptation)\nTest cultural context adaptation.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emoji_sequence_optimizer.py\", line 24, in setUp\n    self.knowledge_base = EmojiKnowledgeBase(load_default=True)\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_knowledge_base.py\", line 261, in __init__\n    self.load_default_dataset()\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_knowledge_base.py\", line 280, in load_default_dataset\n    self.add_emoji(\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_knowledge_base.py\", line 490, in add_emoji\n    self._add_to_version_tracking(\"new_emojis\", emoji)\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'EmojiKnowledgeBase' object has no attribute '_add_to_version_tracking'\n\n======================================================================\nERROR: test_custom_optimization_profile (__main__.TestEmojiSequenceOptimizer.test_custom_optimization_profile)\nTest creating and using custom optimization profiles.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emoji_sequence_optimizer.py\", line 24, in setUp\n    self.knowledge_base = EmojiKnowledgeBase(load_default=True)\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_knowledge_base.py\", line 261, in __init__\n    self.load_default_dataset()\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_knowledge_base.py\", line 280, in load_default_dataset\n    self.add_emoji(\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_knowledge_base.py\", line 490, in add_emoji\n    self._add_to_version_tracking(\"new_emojis\", emoji)\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'EmojiKnowledgeBase' object has no attribute '_add_to_version_tracking'\n\n======================================================================\nERROR: test_domain_specific_optimization (__main__.TestEmojiSequenceOptimizer.test_domain_specific_optimization)\nTest domain-specific optimization.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emoji_sequence_optimizer.py\", line 24, in setUp\n    self.knowledge_base = EmojiKnowledgeBase(load_default=True)\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_knowledge_base.py\", line 261, in __init__\n    self.load_default_dataset()\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_knowledge_base.py\", line 280, in load_default_dataset\n    self.add_emoji(\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_knowledge_base.py\", line 490, in add_emoji\n    self._add_to_version_tracking(\"new_emojis\", emoji)\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'EmojiKnowledgeBase' object has no attribute '_add_to_version_tracking'\n\n======================================================================\nERROR: test_edge_cases (__main__.TestEmojiSequenceOptimizer.test_edge_cases)\nTest edge cases like empty sequences and invalid inputs.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emoji_sequence_optimizer.py\", line 24, in setUp\n    self.knowledge_base = EmojiKnowledgeBase(load_default=True)\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_knowledge_base.py\", line 261, in __init__\n    self.load_default_dataset()\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_knowledge_base.py\", line 280, in load_default_dataset\n    self.add_emoji(\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_knowledge_base.py\", line 490, in add_emoji\n    self._add_to_version_tracking(\"new_emojis\", emoji)\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'EmojiKnowledgeBase' object has no attribute '_add_to_version_tracking'\n\n======================================================================\nERROR: test_grouping_strategies (__main__.TestEmojiSequenceOptimizer.test_grouping_strategies)\nTest different grouping strategies.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emoji_sequence_optimizer.py\", line 24, in setUp\n    self.knowledge_base = EmojiKnowledgeBase(load_default=True)\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_knowledge_base.py\", line 261, in __init__\n    self.load_default_dataset()\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_knowledge_base.py\", line 280, in load_default_dataset\n    self.add_emoji(\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_knowledge_base.py\", line 490, in add_emoji\n    self._add_to_version_tracking(\"new_emojis\", emoji)\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'EmojiKnowledgeBase' object has no attribute '_add_to_version_tracking'\n\n======================================================================\nERROR: test_optimization_profiles (__main__.TestEmojiSequenceOptimizer.test_optimization_profiles)\nTest different optimization profiles.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emoji_sequence_optimizer.py\", line 24, in setUp\n    self.knowledge_base = EmojiKnowledgeBase(load_default=True)\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_knowledge_base.py\", line 261, in __init__\n    self.load_default_dataset()\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_knowledge_base.py\", line 280, in load_default_dataset\n    self.add_emoji(\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_knowledge_base.py\", line 490, in add_emoji\n    self._add_to_version_tracking(\"new_emojis\", emoji)\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'EmojiKnowledgeBase' object has no attribute '_add_to_version_tracking'\n\n======================================================================\nERROR: test_optimization_with_constraints (__main__.TestEmojiSequenceOptimizer.test_optimization_with_constraints)\nTest optimization with various constraints.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emoji_sequence_optimizer.py\", line 24, in setUp\n    self.knowledge_base = EmojiKnowledgeBase(load_default=True)\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_knowledge_base.py\", line 261, in __init__\n    self.load_default_dataset()\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_knowledge_base.py\", line 280, in load_default_dataset\n    self.add_emoji(\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_knowledge_base.py\", line 490, in add_emoji\n    self._add_to_version_tracking(\"new_emojis\", emoji)\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'EmojiKnowledgeBase' object has no attribute '_add_to_version_tracking'\n\n======================================================================\nERROR: test_sequence_analysis (__main__.TestEmojiSequenceOptimizer.test_sequence_analysis)\nTest analyzing emoji sequences without optimizing.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emoji_sequence_optimizer.py\", line 24, in setUp\n    self.knowledge_base = EmojiKnowledgeBase(load_default=True)\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_knowledge_base.py\", line 261, in __init__\n    self.load_default_dataset()\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_knowledge_base.py\", line 280, in load_default_dataset\n    self.add_emoji(\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_knowledge_base.py\", line 490, in add_emoji\n    self._add_to_version_tracking(\"new_emojis\", emoji)\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'EmojiKnowledgeBase' object has no attribute '_add_to_version_tracking'\n\n======================================================================\nERROR: test_weight_calculations (__main__.TestEmojiSequenceOptimizer.test_weight_calculations)\nTest calculations of various weighted scores.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emoji_sequence_optimizer.py\", line 24, in setUp\n    self.knowledge_base = EmojiKnowledgeBase(load_default=True)\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_knowledge_base.py\", line 261, in __init__\n    self.load_default_dataset()\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_knowledge_base.py\", line 280, in load_default_dataset\n    self.add_emoji(\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\emoji_knowledge_base.py\", line 490, in add_emoji\n    self._add_to_version_tracking(\"new_emojis\", emoji)\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'EmojiKnowledgeBase' object has no attribute '_add_to_version_tracking'\n\n----------------------------------------------------------------------\nRan 11 tests in 0.011s\n\nFAILED (errors=11)\n",
      "duration": 0.09329867362976074
    },
    "test_emoji_translation_engine.py": {
      "success": false,
      "output": "Traceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emoji_translation_engine.py\", line 12, in <module>\n    from src.emoji_translation_engine import (\nModuleNotFoundError: No module named 'src.emoji_translation_engine'\n",
      "duration": 0.05860710144042969
    },
    "test_emotional_intelligence.py": {
      "success": false,
      "output": "2025-05-26 10:33:54,523 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 10:33:54,523 - CommunicationStyleAnalyzer - INFO - CommunicationStyleAnalyzer initialized\n2025-05-26 10:33:54,523 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\nC:\\Users\\every\\Desktop\\Alex Familiar\\src\\emotional_intelligence.py:73: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).\n  timestamp: str = field(default_factory=lambda: datetime.utcnow().isoformat())\n.2025-05-26 10:33:54,530 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 10:33:54,530 - CommunicationStyleAnalyzer - INFO - CommunicationStyleAnalyzer initialized\n2025-05-26 10:33:54,530 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\n.2025-05-26 10:33:54,533 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 10:33:54,533 - CommunicationStyleAnalyzer - INFO - CommunicationStyleAnalyzer initialized\n2025-05-26 10:33:54,533 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\nC:\\Users\\every\\Desktop\\Alex Familiar\\src\\emotional_intelligence.py:104: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).\n  last_updated: str = field(default_factory=lambda: datetime.utcnow().isoformat())\nC:\\Users\\every\\Desktop\\Alex Familiar\\src\\emotional_intelligence.py:971: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).\n  profile.last_updated = datetime.utcnow().isoformat()\n.2025-05-26 10:33:54,535 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 10:33:54,535 - CommunicationStyleAnalyzer - INFO - CommunicationStyleAnalyzer initialized\n2025-05-26 10:33:54,535 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\nC:\\Users\\every\\Desktop\\Alex Familiar\\src\\communication_style_analyzer.py:93: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).\n  self.last_updated = datetime.utcnow().isoformat()\nC:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emotional_intelligence.py:295: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).\n  timestamp=datetime.utcnow().isoformat(),\nC:\\Users\\every\\Desktop\\Alex Familiar\\src\\communication_style_analyzer.py:101: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).\n  self.last_updated = datetime.utcnow().isoformat()\n2025-05-26 10:33:54,536 - CommunicationStyleAnalyzer - INFO - Analyzing communication style for agent integration-test-agent with 3 messages\nC:\\Users\\every\\Desktop\\Alex Familiar\\src\\communication_style_analyzer.py:367: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).\n  style.last_updated = datetime.utcnow().isoformat()\nE2025-05-26 10:33:54,542 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 10:33:54,542 - CommunicationStyleAnalyzer - INFO - CommunicationStyleAnalyzer initialized\n2025-05-26 10:33:54,542 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\nF2025-05-26 10:33:54,542 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 10:33:54,542 - CommunicationStyleAnalyzer - INFO - CommunicationStyleAnalyzer initialized\n2025-05-26 10:33:54,543 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\n.2025-05-26 10:33:54,543 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 10:33:54,543 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\n2025-05-26 10:33:54,544 - EmotionalIntelligence - WARNING - Missing context variable in template: 'topic'\nF2025-05-26 10:33:54,544 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 10:33:54,544 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\nF2025-05-26 10:33:54,544 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 10:33:54,545 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\n2025-05-26 10:33:54,545 - EmotionalIntelligence - WARNING - Missing context variable in template: 'achievement'\nF2025-05-26 10:33:54,545 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 10:33:54,546 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\n.\n======================================================================\nERROR: test_integration_with_communication_style (__main__.TestEmotionalIntelligence.test_integration_with_communication_style)\nTest integration between EmotionalIntelligence and CommunicationStyleAnalyzer.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emotional_intelligence.py\", line 301, in test_integration_with_communication_style\n    style = self.style_analyzer.analyze_message_history(history)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\communication_style_analyzer.py\", line 383, in analyze_message_history\n    style.prefers_structured_responses = self._analyze_structure_preference(received_messages)\n                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\communication_style_analyzer.py\", line 701, in _analyze_structure_preference\n    elif re.search(r'^\\s*(Section|Part|Step|Phase|Category)[\\s:]', content, re.MULTILINE, re.IGNORECASE):\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nTypeError: search() takes from 2 to 3 positional arguments but 4 were given\n\n======================================================================\nFAIL: test_interaction_type_detection (__main__.TestEmotionalIntelligence.test_interaction_type_detection)\nTest that interaction types are correctly categorized.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emotional_intelligence.py\", line 213, in test_interaction_type_detection\n    self.assertEqual(\nAssertionError: <InteractionType.CRISIS: 3> != <InteractionType.CELEBRATION: 4>\n\n======================================================================\nFAIL: test_response_to_anger_in_conflict (__main__.TestEmotionalResponseScenarios.test_response_to_anger_in_conflict)\nTest appropriate responses to angry messages in conflict situations.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emotional_intelligence.py\", line 404, in test_response_to_anger_in_conflict\n    self.assertIn(\"emotional distance\", formatted_response)\nAssertionError: 'emotional distance' not found in 'I acknowledge your message and will respond appropriately.'\n\n======================================================================\nFAIL: test_response_to_fear_in_crisis (__main__.TestEmotionalResponseScenarios.test_response_to_fear_in_crisis)\nTest appropriate responses to fearful messages in crisis situations.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emotional_intelligence.py\", line 433, in test_response_to_fear_in_crisis\n    self.assertIn(\"action\", formatted_response.lower())\nAssertionError: 'action' not found in \"i recognize the urgency of this situation regarding the security breach. while maintaining necessary emotional distance to ensure effective handling, i'm implementing immediate steps to address: 1) isolate affected systems, 2) assess data impact, 3) implement containment. drawing on our 'adaptability as strength' principle, we'll adjust our approach as the situation evolves.\"\n\n======================================================================\nFAIL: test_response_to_joy (__main__.TestEmotionalResponseScenarios.test_response_to_joy)\nTest appropriate responses to joyful messages.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_emotional_intelligence.py\", line 381, in test_response_to_joy\n    self.assertEqual(response.expression_style[\"emotional_tone\"], EmotionalTone.POSITIVE.name)\nAssertionError: 'VERY_POSITIVE' != 'POSITIVE'\n- VERY_POSITIVE\n? -----\n+ POSITIVE\n\n\n----------------------------------------------------------------------\nRan 10 tests in 0.023s\n\nFAILED (failures=4, errors=1)\n",
      "duration": 0.10779452323913574
    },
    "test_endpoints.py": {
      "success": false,
      "output": "Traceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_endpoints.py\", line 177, in <module>\n    sys.exit(main())\n             ^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_endpoints.py\", line 163, in main\n    print(f\"Home Endpoint: {'\\u2713' if home_result else '\\u2717'}\")\n  File \"C:\\Users\\every\\miniconda3\\Lib\\site-packages\\colorama\\ansitowin32.py\", line 47, in write\n    self.__convertor.write(text)\n  File \"C:\\Users\\every\\miniconda3\\Lib\\site-packages\\colorama\\ansitowin32.py\", line 177, in write\n    self.write_and_convert(text)\n  File \"C:\\Users\\every\\miniconda3\\Lib\\site-packages\\colorama\\ansitowin32.py\", line 205, in write_and_convert\n    self.write_plain_text(text, cursor, len(text))\n  File \"C:\\Users\\every\\miniconda3\\Lib\\site-packages\\colorama\\ansitowin32.py\", line 210, in write_plain_text\n    self.wrapped.write(text[start:end])\n  File \"C:\\Users\\every\\miniconda3\\Lib\\encodings\\cp1252.py\", line 19, in encode\n    return codecs.charmap_encode(input,self.errors,encoding_table)[0]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nUnicodeEncodeError: 'charmap' codec can't encode character '\\u2717' in position 15: character maps to <undefined>\n",
      "duration": 16.73483180999756
    },
    "test_enhanced_principle_evaluator.py": {
      "success": false,
      "output": "",
      "duration": 0.057116031646728516
    },
    "test_fairness_evaluation.py": {
      "success": true,
      "output": "",
      "duration": 0.08997440338134766
    },
    "test_framework.py": {
      "success": true,
      "output": "",
      "duration": 0.06425023078918457
    },
    "test_human_interaction_styler.py": {
      "success": false,
      "output": "2025-05-26 10:34:11,587 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\n2025-05-26 10:34:11,587 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 10:34:11,587 - HumanInteractionStyler - INFO - HumanInteractionStyler initialized\nC:\\Users\\every\\Desktop\\Alex Familiar\\src\\human_interaction_styler.py:110: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).\n  last_updated: str = field(default_factory=lambda: datetime.utcnow().isoformat())\n2025-05-26 10:34:11,588 - HumanInteractionStyler - INFO - Created new profile for human: authenticity_test\n2025-05-26 10:34:11,588 - HumanInteractionStyler - INFO - Created new profile for human: new_user_test\n.2025-05-26 10:34:11,588 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\n2025-05-26 10:34:11,588 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 10:34:11,588 - HumanInteractionStyler - INFO - HumanInteractionStyler initialized\n2025-05-26 10:34:11,588 - HumanInteractionStyler - INFO - Created new profile for human: collectivist_test\n2025-05-26 10:34:11,588 - HumanInteractionStyler - INFO - Created new profile for human: individualist_test\nF2025-05-26 10:34:11,589 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\n2025-05-26 10:34:11,589 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 10:34:11,589 - HumanInteractionStyler - INFO - HumanInteractionStyler initialized\n2025-05-26 10:34:11,589 - HumanInteractionStyler - INFO - Created new profile for human: direct_user\nC:\\Users\\every\\Desktop\\Alex Familiar\\src\\emotional_intelligence.py:73: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).\n  timestamp: str = field(default_factory=lambda: datetime.utcnow().isoformat())\nC:\\Users\\every\\Desktop\\Alex Familiar\\src\\human_interaction_styler.py:356: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).\n  profile.last_updated = datetime.utcnow().isoformat()\n2025-05-26 10:34:11,597 - HumanInteractionStyler - INFO - Saved profile for human: direct_user\n2025-05-26 10:34:11,597 - HumanInteractionStyler - INFO - Created new profile for human: indirect_user\n2025-05-26 10:34:11,598 - HumanInteractionStyler - INFO - Saved profile for human: indirect_user\n.2025-05-26 10:34:11,598 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\n2025-05-26 10:34:11,598 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 10:34:11,598 - HumanInteractionStyler - INFO - HumanInteractionStyler initialized\n.2025-05-26 10:34:11,601 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\n2025-05-26 10:34:11,601 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 10:34:11,601 - HumanInteractionStyler - INFO - HumanInteractionStyler initialized\n2025-05-26 10:34:11,601 - HumanInteractionStyler - INFO - Created new profile for human: formal_user\n2025-05-26 10:34:11,602 - HumanInteractionStyler - INFO - Saved profile for human: formal_user\n2025-05-26 10:34:11,602 - HumanInteractionStyler - INFO - Created new profile for human: casual_user\n2025-05-26 10:34:11,603 - HumanInteractionStyler - INFO - Saved profile for human: casual_user\nF2025-05-26 10:34:11,604 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\n2025-05-26 10:34:11,604 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 10:34:11,604 - HumanInteractionStyler - INFO - HumanInteractionStyler initialized\n2025-05-26 10:34:11,604 - HumanInteractionStyler - INFO - Created new profile for human: test_user\n2025-05-26 10:34:11,604 - HumanInteractionStyler - INFO - Saved profile for human: test_user\n2025-05-26 10:34:11,605 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\n2025-05-26 10:34:11,615 - HumanInteractionStyler - INFO - Loaded profile for human: test_user\n2025-05-26 10:34:11,615 - HumanInteractionStyler - INFO - HumanInteractionStyler initialized\n.2025-05-26 10:34:11,616 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\n2025-05-26 10:34:11,616 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 10:34:11,616 - HumanInteractionStyler - INFO - HumanInteractionStyler initialized\n2025-05-26 10:34:11,616 - HumanInteractionStyler - INFO - Created new profile for human: serialization_test\n.2025-05-26 10:34:11,617 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\n2025-05-26 10:34:11,617 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 10:34:11,617 - HumanInteractionStyler - INFO - HumanInteractionStyler initialized\n2025-05-26 10:34:11,617 - HumanInteractionStyler - INFO - Created new profile for human: test_profile_update\n2025-05-26 10:34:11,618 - HumanInteractionStyler - INFO - Saved profile for human: test_profile_update\nF2025-05-26 10:34:11,619 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\n2025-05-26 10:34:11,619 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 10:34:11,619 - HumanInteractionStyler - INFO - HumanInteractionStyler initialized\n2025-05-26 10:34:11,619 - HumanInteractionStyler - INFO - Created new profile for human: detailed_adaptation_test\n2025-05-26 10:34:11,619 - HumanInteractionStyler - INFO - Created new profile for human: concise_adaptation_test\nF2025-05-26 10:34:11,620 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\n2025-05-26 10:34:11,620 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 10:34:11,620 - HumanInteractionStyler - INFO - HumanInteractionStyler initialized\n2025-05-26 10:34:11,620 - HumanInteractionStyler - INFO - Created new profile for human: direct_adaptation_test\n2025-05-26 10:34:11,620 - HumanInteractionStyler - INFO - Created new profile for human: indirect_adaptation_test\nF2025-05-26 10:34:11,621 - EmotionalIntelligence - INFO - EmotionalIntelligence module initialized\n2025-05-26 10:34:11,621 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 10:34:11,621 - HumanInteractionStyler - INFO - HumanInteractionStyler initialized\n2025-05-26 10:34:11,621 - HumanInteractionStyler - INFO - Created new profile for human: formal_adaptation_test\n2025-05-26 10:34:11,621 - HumanInteractionStyler - INFO - Created new profile for human: casual_adaptation_test\n.\n======================================================================\nFAIL: test_cultural_adaptation (__main__.TestHumanInteractionStyler.test_cultural_adaptation)\nTest adaptation based on cultural context.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_human_interaction_styler.py\", line 286, in test_cultural_adaptation\n    self.assertIn(\"We could\", collectivist_adapted)\nAssertionError: 'We could' not found in 'We might find you should implement the new system architecture to improve performance.'\n\n======================================================================\nFAIL: test_formality_detection (__main__.TestHumanInteractionStyler.test_formality_detection)\nTest detection of formality preferences from messages.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_human_interaction_styler.py\", line 108, in test_formality_detection\n    self.assertGreater(formal_profile.communication_style.formality.value,\nAssertionError: 3 not greater than 3\n\n======================================================================\nFAIL: test_profile_update_from_message (__main__.TestHumanInteractionStyler.test_profile_update_from_message)\nTest updating a profile based on a message.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_human_interaction_styler.py\", line 153, in test_profile_update_from_message\n    self.assertGreater(updated_profile.emotional_expressiveness, 0.5)\nAssertionError: 0.5 not greater than 0.5\n\n======================================================================\nFAIL: test_response_adaptation_detail_level (__main__.TestHumanInteractionStyler.test_response_adaptation_detail_level)\nTest adaptation of responses based on detail level.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_human_interaction_styler.py\", line 220, in test_response_adaptation_detail_level\n    self.assertGreater(len(adapted_detailed), len(adapted_concise))\nAssertionError: 802 not greater than 802\n\n======================================================================\nFAIL: test_response_adaptation_directness (__main__.TestHumanInteractionStyler.test_response_adaptation_directness)\nTest adaptation of responses based on directness.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_human_interaction_styler.py\", line 261, in test_response_adaptation_directness\n    self.assertIn(\"might consider\", indirect_response)\nAssertionError: 'might consider' not found in '\\n        The system performance has been analyzed.\\n        \\n        There are several factors affecting the response time:\\n        1. Database query optimization\\n        2. Network latency\\n        3. Cache utilization\\n        \\n        In conclusion, we need to focus on optimizing database queries first\\n        as they are the main bottleneck.\\n        '\n\n----------------------------------------------------------------------\nRan 11 tests in 0.036s\n\nFAILED (failures=5)\n",
      "duration": 0.12923002243041992
    },
    "test_llm_integration_mock.py": {
      "success": false,
      "output": "Traceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_llm_integration_mock.py\", line 22, in <module>\n    from principle_engine_llm_enhanced import EnhancedPrincipleEngineLLM\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\principle_engine_llm_enhanced.py\", line 16, in <module>\n    from principle_engine import PrincipleEngine, PrincipleEvaluator\nImportError: cannot import name 'PrincipleEvaluator' from 'principle_engine' (C:\\Users\\every\\Desktop\\Alex Familiar\\src\\principle_engine.py)\n",
      "duration": 0.10579538345336914
    },
    "test_media_content_processor.py": {
      "success": false,
      "output": "Traceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_media_content_processor.py\", line 18, in <module>\n    from media_content_processor import (\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\media_content_processor.py\", line 153, in <module>\n    @dataclass\n     ^^^^^^^^^\n  File \"C:\\Users\\every\\miniconda3\\Lib\\dataclasses.py\", line 1275, in dataclass\n    return wrap(cls)\n           ^^^^^^^^^\n  File \"C:\\Users\\every\\miniconda3\\Lib\\dataclasses.py\", line 1265, in wrap\n    return _process_class(cls, init, repr, eq, order, unsafe_hash,\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\miniconda3\\Lib\\dataclasses.py\", line 1063, in _process_class\n    _init_fn(all_init_fields,\n  File \"C:\\Users\\every\\miniconda3\\Lib\\dataclasses.py\", line 585, in _init_fn\n    raise TypeError(f'non-default argument {f.name!r} '\nTypeError: non-default argument 'format' follows default argument\n",
      "duration": 0.8087451457977295
    },
    "test_multi_model_integration.py": {
      "success": false,
      "output": "",
      "duration": 0.10854077339172363
    },
    "test_multilingual_engine.py": {
      "success": false,
      "output": "Traceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_multilingual_engine.py\", line 17, in <module>\n    from principle_engine import PrincipleEngine, Principle\nImportError: cannot import name 'Principle' from 'principle_engine' (C:\\Users\\every\\Desktop\\Alex Familiar\\src\\principle_engine.py)\n",
      "duration": 0.12471675872802734
    },
    "test_orchestration_analytics.py": {
      "success": false,
      "output": "Traceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_orchestration_analytics.py\", line 14, in <module>\n    from orchestration_analytics import (\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\orchestration_analytics.py\", line 31, in <module>\n    from orchestrator_engine import (\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\orchestrator_engine.py\", line 29, in <module>\n    from agent_card import AgentCard\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\agent_card.py\", line 17, in <module>\n    import semver\nModuleNotFoundError: No module named 'semver'\n",
      "duration": 0.3751673698425293
    },
    "test_principle_engine.py": {
      "success": false,
      "output": "2025-05-26 10:34:13,232 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\nC:\\Users\\every\\Desktop\\Alex Familiar\\src\\principle_engine.py:212: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).\n  \"timestamp\": datetime.utcnow().isoformat(),\n2025-05-26 10:34:13,232 - PrincipleEngine - INFO - Updated overall principle consistency score: 97.90\n2025-05-26 10:34:13,232 - PrincipleEngine - INFO - Message test-2 evaluated with overall score: 79.00\n.2025-05-26 10:34:13,232 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 10:34:13,232 - PrincipleEngine - INFO - Updated overall principle consistency score: 99.55\n2025-05-26 10:34:13,232 - PrincipleEngine - INFO - Message test-1 evaluated with overall score: 95.50\n2025-05-26 10:34:13,232 - PrincipleEngine - INFO - Updated overall principle consistency score: 97.50\n2025-05-26 10:34:13,232 - PrincipleEngine - INFO - Message test-2 evaluated with overall score: 79.00\n.2025-05-26 10:34:13,232 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\nC:\\Users\\every\\Desktop\\Alex Familiar\\src\\principle_engine.py:437: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).\n  response[\"result\"][\"timestamp\"] = datetime.utcnow().isoformat()\n2025-05-26 10:34:13,232 - PrincipleEngine - INFO - Response adjusted to align with principles for message: test-2\n.2025-05-26 10:34:13,233 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n.2025-05-26 10:34:13,233 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n.2025-05-26 10:34:13,233 - PrincipleEngine - INFO - PrincipleEngine initialized with 10 core principles\n2025-05-26 10:34:13,233 - PrincipleEngine - INFO - Updated overall principle consistency score: 97.90\n2025-05-26 10:34:13,233 - PrincipleEngine - INFO - Message test-2 evaluated with overall score: 79.00\n2025-05-26 10:34:13,233 - PrincipleEngine - INFO - Principle consistency scores have been reset\n.C:\\Users\\every\\Desktop\\Alex Familiar\\src\\adaptive_bridge_builder.py:40: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).\n  self.created_at = datetime.utcnow().isoformat()\n2025-05-26 10:34:13,233 - AdaptiveBridgeBuilder - ERROR - Failed to load agent card from src/agent_card.json: [Errno 2] No such file or directory: 'src/agent_card.json'\nE2025-05-26 10:34:13,234 - AdaptiveBridgeBuilder - ERROR - Failed to load agent card from src/agent_card.json: [Errno 2] No such file or directory: 'src/agent_card.json'\nE2025-05-26 10:34:13,234 - AdaptiveBridgeBuilder - ERROR - Failed to load agent card from src/agent_card.json: [Errno 2] No such file or directory: 'src/agent_card.json'\nE2025-05-26 10:34:13,234 - AdaptiveBridgeBuilder - ERROR - Failed to load agent card from src/agent_card.json: [Errno 2] No such file or directory: 'src/agent_card.json'\nE\n======================================================================\nERROR: test_get_principle_descriptions (__main__.TestPrincipleGuidedBridgeBuilder.test_get_principle_descriptions)\nTest getting principle descriptions from the agent.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\adaptive_bridge_builder.py\", line 46, in __init__\n    with open(agent_card_path, 'r') as f:\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^\nFileNotFoundError: [Errno 2] No such file or directory: 'src/agent_card.json'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_principle_engine.py\", line 135, in setUp\n    self.agent = PrincipleGuidedBridgeBuilder()\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\principle_engine_example.py\", line 43, in __init__\n    super().__init__(agent_id, agent_card_path)\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\adaptive_bridge_builder.py\", line 54, in __init__\n    with open(agent_card_path, 'w') as f:\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^\nFileNotFoundError: [Errno 2] No such file or directory: 'src/agent_card.json'\n\n======================================================================\nERROR: test_initialization (__main__.TestPrincipleGuidedBridgeBuilder.test_initialization)\nTest that the agent initializes correctly.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\adaptive_bridge_builder.py\", line 46, in __init__\n    with open(agent_card_path, 'r') as f:\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^\nFileNotFoundError: [Errno 2] No such file or directory: 'src/agent_card.json'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_principle_engine.py\", line 135, in setUp\n    self.agent = PrincipleGuidedBridgeBuilder()\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\principle_engine_example.py\", line 43, in __init__\n    super().__init__(agent_id, agent_card_path)\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\adaptive_bridge_builder.py\", line 54, in __init__\n    with open(agent_card_path, 'w') as f:\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^\nFileNotFoundError: [Errno 2] No such file or directory: 'src/agent_card.json'\n\n======================================================================\nERROR: test_principle_consistency_report (__main__.TestPrincipleGuidedBridgeBuilder.test_principle_consistency_report)\nTest getting a principle consistency report.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\adaptive_bridge_builder.py\", line 46, in __init__\n    with open(agent_card_path, 'r') as f:\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^\nFileNotFoundError: [Errno 2] No such file or directory: 'src/agent_card.json'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_principle_engine.py\", line 135, in setUp\n    self.agent = PrincipleGuidedBridgeBuilder()\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\principle_engine_example.py\", line 43, in __init__\n    super().__init__(agent_id, agent_card_path)\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\adaptive_bridge_builder.py\", line 54, in __init__\n    with open(agent_card_path, 'w') as f:\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^\nFileNotFoundError: [Errno 2] No such file or directory: 'src/agent_card.json'\n\n======================================================================\nERROR: test_process_message (__main__.TestPrincipleGuidedBridgeBuilder.test_process_message)\nTest that messages are processed with principle evaluation.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\adaptive_bridge_builder.py\", line 46, in __init__\n    with open(agent_card_path, 'r') as f:\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^\nFileNotFoundError: [Errno 2] No such file or directory: 'src/agent_card.json'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_principle_engine.py\", line 135, in setUp\n    self.agent = PrincipleGuidedBridgeBuilder()\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\principle_engine_example.py\", line 43, in __init__\n    super().__init__(agent_id, agent_card_path)\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\adaptive_bridge_builder.py\", line 54, in __init__\n    with open(agent_card_path, 'w') as f:\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^\nFileNotFoundError: [Errno 2] No such file or directory: 'src/agent_card.json'\n\n----------------------------------------------------------------------\nRan 10 tests in 0.003s\n\nFAILED (errors=4)\n",
      "duration": 0.0865926742553711
    },
    "test_principle_engine_positive.py": {
      "success": true,
      "output": "",
      "duration": 0.10832357406616211
    },
    "test_principles_integration.py": {
      "success": false,
      "output": "",
      "duration": 0.05656623840332031
    },
    "test_project_orchestrator.py": {
      "success": false,
      "output": "Traceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_project_orchestrator.py\", line 14, in <module>\n    from project_orchestrator import (\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\project_orchestrator.py\", line 25, in <module>\n    from orchestrator_engine import (\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\orchestrator_engine.py\", line 29, in <module>\n    from agent_card import AgentCard\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\agent_card.py\", line 17, in <module>\n    import semver\nModuleNotFoundError: No module named 'semver'\n",
      "duration": 0.3574070930480957
    },
    "test_protocol_adapter.py": {
      "success": false,
      "output": "Traceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_protocol_adapter.py\", line 16, in <module>\n    import pytest\nModuleNotFoundError: No module named 'pytest'\n",
      "duration": 0.10201334953308105
    },
    "test_runner.py": {
      "success": false,
      "output": "Traceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_runner.py\", line 20, in <module>\n    from test_scenarios import create_test_suite as create_core_test_suite\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_scenarios.py\", line 37, in <module>\n    \"style\": CommunicationStyle.FORMAL,\n             ^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: type object 'CommunicationStyle' has no attribute 'FORMAL'\n",
      "duration": 0.08248543739318848
    },
    "test_scenarios.py": {
      "success": false,
      "output": "Traceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_scenarios.py\", line 37, in <module>\n    \"style\": CommunicationStyle.FORMAL,\n             ^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: type object 'CommunicationStyle' has no attribute 'FORMAL'\n",
      "duration": 0.07239651679992676
    },
    "test_universal_agent_connector.py": {
      "success": false,
      "output": "Traceback (most recent call last):\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\test_universal_agent_connector.py\", line 17, in <module>\n    from universal_agent_connector import (\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\universal_agent_connector.py\", line 22, in <module>\n    from agent_registry import AgentRegistry\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\agent_registry.py\", line 27, in <module>\n    from agent_card import AgentCard\n  File \"C:\\Users\\every\\Desktop\\Alex Familiar\\src\\agent_card.py\", line 17, in <module>\n    import semver\nModuleNotFoundError: No module named 'semver'\n",
      "duration": 0.3849523067474365
    }
  },
  "summary": {
    "total": 28,
    "passed": 5,
    "failed": 23
  }
}